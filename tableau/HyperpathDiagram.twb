<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='fasttrips trace 1' inline='true' name='textscan.42355.603923634262' version='9.3'>
      <connection class='textscan' directory='C:/Users/lzorn/Documents/fast-trips-develop/sfcta/demand_v0.1_stochastic_iter1_nocap_trace' filename='fasttrips_labels_1.csv' password='' server='' username=''>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[fasttrips_labels_1#csv].[node ID]' />
              <expression op='[fasttrips_labels_ids_1#csv].[stop_id]' />
            </expression>
          </clause>
          <relation name='fasttrips_labels_1#csv' table='[fasttrips_labels_1#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='label_iteration' ordinal='0' />
              <column datatype='integer' name='link' ordinal='1' />
              <column datatype='integer' name='node ID' ordinal='2' />
              <column datatype='real' name='time' ordinal='3' />
              <column datatype='string' name='mode' ordinal='4' />
              <column datatype='string' name='trip_id' ordinal='5' />
              <column datatype='real' name='link_time' ordinal='6' />
              <column datatype='real' name='link_cost' ordinal='7' />
              <column datatype='real' name='cost' ordinal='8' />
              <column datatype='string' name='AB' ordinal='9' />
            </columns>
          </relation>
          <relation name='fasttrips_labels_ids_1#csv' table='[fasttrips_labels_ids_1#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='stop_id' ordinal='0' />
              <column datatype='integer' name='stop_id_label_iter' ordinal='1' />
              <column datatype='integer' name='is_trip' ordinal='2' />
              <column datatype='real' name='label_stop_cost' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>label_iteration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[label_iteration]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>label_iteration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link</remote-name>
            <remote-type>20</remote-type>
            <local-name>[link]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>link</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>node ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[node ID]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>node ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mode]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_id]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>trip_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link_time</remote-name>
            <remote-type>5</remote-type>
            <local-name>[link_time]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>link_time</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[link_cost]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>link_cost</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>cost</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AB</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AB]</local-name>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias>AB</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fasttrips_labels_1#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stop_id]</local-name>
            <parent-name>[fasttrips_labels_ids_1#csv]</parent-name>
            <remote-alias>stop_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_id_label_iter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stop_id_label_iter]</local-name>
            <parent-name>[fasttrips_labels_ids_1#csv]</parent-name>
            <remote-alias>stop_id_label_iter</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_trip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_trip]</local-name>
            <parent-name>[fasttrips_labels_ids_1#csv]</parent-name>
            <remote-alias>is_trip</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>label_stop_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[label_stop_cost]</local-name>
            <parent-name>[fasttrips_labels_ids_1#csv]</parent-name>
            <remote-alias>label_stop_cost</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fasttrips_labels_ids_1#csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[is_trip]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Label Iteration' datatype='integer' name='[label_iteration]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Link' datatype='integer' name='[link]' role='dimension' type='ordinal' />
      <column caption='Link Cost' datatype='real' name='[link_cost]' role='measure' type='quantitative' />
      <column caption='Link Time' datatype='real' name='[link_time]' role='measure' type='quantitative' />
      <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal' />
      <column datatype='integer' name='[node ID]' role='dimension' type='ordinal' />
      <column caption='Stop Id' datatype='integer' name='[stop_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Stop Id Label Iter' datatype='integer' name='[stop_id_label_iter]' role='dimension' type='ordinal' />
      <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative' />
      <column caption='Trip Id' datatype='string' name='[trip_id]' role='dimension' type='nominal' />
      <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.537226' measure-ordering='alphabetic' measure-percentage='0.462774' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:mode:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Access&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;heavy_rail&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Transfer&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;rapid_bus&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;local_bus&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Egress&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='fasttrips_labels_ids_1' inline='true' name='textscan.1q3wy2a1pf851414w2mfs0s8koc9' version='9.3'>
      <connection class='textscan' directory='C:/Users/lzorn/Documents/fast-trips-develop/sfcta/demand_v0.1_stochastic_iter1_nocap_trace' filename='fasttrips_labels_ids_1.csv' password='' server=''>
        <relation name='fasttrips_labels_ids_1.csv' table='[fasttrips_labels_ids_1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='stop_id' ordinal='0' />
            <column datatype='integer' name='stop_id_label_iter' ordinal='1' />
            <column datatype='integer' name='is_trip' ordinal='2' />
            <column datatype='real' name='label_stop_cost' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>stop_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stop_id]</local-name>
            <parent-name>[fasttrips_labels_ids_1.csv]</parent-name>
            <remote-alias>stop_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_id_label_iter</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stop_id_label_iter]</local-name>
            <parent-name>[fasttrips_labels_ids_1.csv]</parent-name>
            <remote-alias>stop_id_label_iter</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_trip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_trip]</local-name>
            <parent-name>[fasttrips_labels_ids_1.csv]</parent-name>
            <remote-alias>is_trip</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>label_stop_cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[label_stop_cost]</local-name>
            <parent-name>[fasttrips_labels_ids_1.csv]</parent-name>
            <remote-alias>label_stop_cost</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fasttrips_labels_ids_1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Is Trip' datatype='integer' name='[is_trip]' role='dimension' type='ordinal' />
      <column caption='Label Stop Cost' datatype='real' name='[label_stop_cost]' role='measure' type='quantitative' />
      <column caption='Stop Id' datatype='integer' name='[stop_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Stop Id Label Iter' datatype='integer' name='[stop_id_label_iter]' role='dimension' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.512409' measure-ordering='alphabetic' measure-percentage='0.487591' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Diagram'>
      <table>
        <view>
          <datasources>
            <datasource caption='fasttrips trace 1' name='textscan.42355.603923634262' />
          </datasources>
          <datasource-dependencies datasource='textscan.42355.603923634262'>
            <column aggregation='Sum' caption='Link' datatype='integer' name='[link]' role='dimension' type='ordinal' />
            <column caption='Link Cost' datatype='real' name='[link_cost]' role='measure' type='quantitative' />
            <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal' />
            <column-instance column='[link]' derivation='None' name='[none:link:ok]' pivot='key' type='ordinal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_id]' derivation='None' name='[none:trip_id:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Stop Id Label Iter' datatype='integer' name='[stop_id_label_iter]' role='dimension' type='ordinal' />
            <column-instance column='[link_cost]' derivation='Sum' name='[sum:link_cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stop_id_label_iter]' derivation='Sum' name='[sum:stop_id_label_iter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative' />
            <column caption='Trip Id' datatype='string' name='[trip_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42355.603923634262].[none:mode:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;Access&quot;' />
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;Egress&quot;' />
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;heavy_rail&quot;' />
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;local_bus&quot;' />
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;rapid_bus&quot;' />
              <groupfilter function='member' level='[none:mode:nk]' member='&quot;Transfer&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42355.603923634262].[none:mode:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.42355.603923634262].[sum:time:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42355.603923634262].[sum:time:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.42355.603923634262].[sum:stop_id_label_iter:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[textscan.42355.603923634262].[sum:stop_id_label_iter:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42355.603923634262].[sum:stop_id_label_iter:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.42355.603923634262].[sum:time:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42355.603923634262].[none:mode:nk]' />
              <size column='[textscan.42355.603923634262].[sum:link_cost:qk]' />
              <text column='[textscan.42355.603923634262].[none:trip_id:nk]' />
              <lod column='[textscan.42355.603923634262].[none:link:ok]' />
              <lod column='[textscan.42355.603923634262].[none:mode:nk]' />
              <lod column='[textscan.42355.603923634262].[none:trip_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1063' />
                <format attr='maxwidth' value='1063' />
                <format attr='minheight' value='671' />
                <format attr='maxheight' value='671' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42355.603923634262].[sum:time:qk]</rows>
        <cols>[textscan.42355.603923634262].[sum:stop_id_label_iter:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='fasttrips_labels_ids_1' name='textscan.1q3wy2a1pf851414w2mfs0s8koc9' />
          </datasources>
          <datasource-dependencies datasource='textscan.1q3wy2a1pf851414w2mfs0s8koc9'>
            <column caption='Label Stop Cost' datatype='real' name='[label_stop_cost]' role='measure' type='quantitative' />
            <column-instance column='[stop_id_label_iter]' derivation='None' name='[none:stop_id_label_iter:ok]' pivot='key' type='ordinal' />
            <column-instance column='[label_stop_cost]' derivation='Sum' name='[pcdf:sum:label_stop_cost:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column aggregation='Sum' caption='Stop Id Label Iter' datatype='integer' name='[stop_id_label_iter]' role='dimension' type='ordinal' />
            <column-instance column='[label_stop_cost]' derivation='Sum' name='[sum:label_stop_cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[pcdf:sum:label_stop_cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[sum:label_stop_cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[sum:label_stop_cost:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[pcdf:sum:label_stop_cost:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[:Measure Names]' value='122' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[:Measure Names]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[Multiple Values]' />
              <lod column='[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[pcdf:sum:label_stop_cost:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[none:stop_id_label_iter:ok]</rows>
        <cols>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Stop Label Iter vs Cost'>
      <table>
        <view>
          <datasources>
            <datasource caption='fasttrips_labels_ids_1' name='textscan.1q3wy2a1pf851414w2mfs0s8koc9' />
          </datasources>
          <datasource-dependencies datasource='textscan.1q3wy2a1pf851414w2mfs0s8koc9'>
            <column aggregation='Sum' caption='Is Trip' datatype='integer' name='[is_trip]' role='dimension' type='ordinal' />
            <column caption='Label Stop Cost' datatype='real' name='[label_stop_cost]' role='measure' type='quantitative' />
            <column-instance column='[is_trip]' derivation='None' name='[none:is_trip:ok]' pivot='key' type='ordinal' />
            <column-instance column='[stop_id_label_iter]' derivation='None' name='[none:stop_id_label_iter:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Stop Id Label Iter' datatype='integer' name='[stop_id_label_iter]' role='dimension' type='ordinal' />
            <column-instance column='[label_stop_cost]' derivation='Sum' name='[sum:label_stop_cost:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[none:is_trip:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[sum:label_stop_cost:qk]</rows>
        <cols>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[none:stop_id_label_iter:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Walk Access'>
      <table>
        <view>
          <datasources>
            <datasource caption='fasttrips trace 1' name='textscan.42355.603923634262' />
          </datasources>
          <datasource-dependencies datasource='textscan.42355.603923634262'>
            <column caption='Cost' datatype='real' name='[cost]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Link' datatype='integer' name='[link]' role='dimension' type='ordinal' />
            <column caption='Link Cost' datatype='real' name='[link_cost]' role='measure' type='quantitative' />
            <column caption='Mode' datatype='string' name='[mode]' role='dimension' type='nominal' />
            <column-instance column='[link]' derivation='None' name='[none:link:ok]' pivot='key' type='ordinal' />
            <column-instance column='[mode]' derivation='None' name='[none:mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_id]' derivation='None' name='[none:trip_id:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Stop Id Label Iter' datatype='integer' name='[stop_id_label_iter]' role='dimension' type='ordinal' />
            <column-instance column='[cost]' derivation='Sum' name='[sum:cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[link_cost]' derivation='Sum' name='[sum:link_cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stop_id_label_iter]' derivation='Sum' name='[sum:stop_id_label_iter:qk]' pivot='key' type='quantitative' />
            <column-instance column='[time]' derivation='Sum' name='[sum:time:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='real' name='[time]' role='measure' type='quantitative' />
            <column caption='Trip Id' datatype='string' name='[trip_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42355.603923634262].[none:mode:nk]'>
            <groupfilter function='member' level='[none:mode:nk]' member='&quot;Access&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42355.603923634262].[none:mode:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.42355.603923634262].[sum:time:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42355.603923634262].[sum:time:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.42355.603923634262].[sum:stop_id_label_iter:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
            <format attr='subtitle' class='0' field='[textscan.42355.603923634262].[sum:stop_id_label_iter:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42355.603923634262].[sum:stop_id_label_iter:qk]' scope='cols' value='true' />
            <encoding attr='space' class='0' domain-expand='false' field='[textscan.42355.603923634262].[sum:time:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42355.603923634262].[sum:cost:qk]' />
              <size column='[textscan.42355.603923634262].[sum:link_cost:qk]' />
              <text column='[textscan.42355.603923634262].[none:trip_id:nk]' />
              <lod column='[textscan.42355.603923634262].[none:link:ok]' />
              <lod column='[textscan.42355.603923634262].[none:mode:nk]' />
              <lod column='[textscan.42355.603923634262].[none:trip_id:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1063' />
                <format attr='maxwidth' value='1063' />
                <format attr='minheight' value='671' />
                <format attr='maxheight' value='671' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42355.603923634262].[sum:time:qk]</rows>
        <cols>[textscan.42355.603923634262].[sum:stop_id_label_iter:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='48'>
    <window class='worksheet' maximized='true' name='Diagram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42355.603923634262].[none:mode:nk]' type='color' />
            <card pane-specification-id='0' param='[textscan.42355.603923634262].[sum:link_cost:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42355.603923634262].[none:link:ok]</field>
            <field>[textscan.42355.603923634262].[none:mode:nk]</field>
            <field>[textscan.42355.603923634262].[none:stop_id:nk]</field>
            <field>[textscan.42355.603923634262].[none:trip_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Walk Access'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42355.603923634262].[sum:cost:qk]' type='color' />
            <card pane-specification-id='0' param='[textscan.42355.603923634262].[sum:link_cost:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.42355.603923634262].[none:link:ok]</field>
            <field>[textscan.42355.603923634262].[none:stop_id:nk]</field>
            <field>[textscan.42355.603923634262].[none:trip_id:nk]</field>
            <field>[textscan.42355.603923634262].[sum:cost:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Stop Label Iter vs Cost'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[none:is_trip:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[none:is_trip:ok]</field>
            <field>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[none:stop_id_label_iter:ok]</field>
            <field>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[none:stop_id_label_iter:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[none:stop_id_label_iter:ok]</field>
            <field>[textscan.1q3wy2a1pf851414w2mfs0s8koc9].[none:stop_id_label_iter:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Diagram' width='192'>
      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
      AOL5bd4NPDgnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Walk Access' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stop Label Iter vs Cost' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dV3QcV5rg+X+k90h470EA9N5bSZREuaJ8laRyU6a7ume6Z+ac2d3X7j1n
      z27Pmd2d2Z7qVldVV8lVSZRIURQpihb0JAgCILz33iRcehNmHxIiKZESyGpRIJHxeyGZiEje
      QMaXcePeG98nKIqioFLFIEEQBM18N0Klmk9qAKhimhoAqpimBoAqpunmuwGq754ii7inJghr
      LCTGmfF5gljibGhnfy6HvAy7ZgAwWuJIcNrwTrrQ2R3IPjczEQ1xRhlPQCYhKQXjfTiLxKAH
      d1CD02m9w7e0zPTEFCaHE5Nee9tPA+4JAoKVBLvp9jeWI0xPuTHFJQLqFSAmhaaH+OjDffzp
      wGHGB9s5fake8Zaf+zvP8w9v7qOy8jIfvPsnWscDjPZ2MT09widv/RPHa/s5+cd/4tML1Xgj
      96mN7nF6hyeQ7/hTHwfe+h0tQ947/rT++L/y3tm2r3njMQ689VtaJ6L/VK8AsUhRQBAQkGiq
      b6Fo+aMYv7JJYs4Snnj2SVqPvMm5yjYSm46jX7mU+o5RCtMbqGwfJkkfpO70e9QNTKHRZbFn
      qcI/fHSdxx/ZSYo8Sn2/B8kQz94di/jje/vJyUukx5/NT7+3hM8OHCMoyZQ8+gK5nuucbphE
      1tl49fVXyIwz4hlo5Gy9CV/Tfk71mDF7Bil5+hc8vyHv9uMJTfDJnz6if2YKMrazWoGe6jL+
      qfljnBteZ1NcH0cvNBMUNTzz0pNf2lW9AsQgY3wmL734Es9vL2Y6YqX17H7+8e3P8MtfnRIS
      0Ol0hCMRFEUhMaOI3Owctj/9Bsvz0lm1toCaC+WIGh0B7xgTMwFsmUt5bmsR16tr8EsCIZcL
      VzCI3prOsz98EfPEID111XgzNvHXf/1LNmYIXLxciVfSEJmeYtzrB0BRFBRAQUv28u3s2ZLL
      8MDkHY9HlmSsCYnEmTQMDvQTkSBz2TZ++dJ2rl+7wMUz5xnxRdCKM/SPffmqoQZADBI0OpxJ
      KYz0jVJUlMxY2IRlZpgp+WaHQ4qE8M6M0jXiozg/G+EO76PV6rHaHGzYtZvlRfnEO8zodDoE
      owmnI4G1Ox9jSWkuySYjgt6EwaRHJwjobTYiM5OM9jRR1T6CzR7Hym2PsnxJPqk281caK2Aw
      GNDp9QjcEqCKTMDvw+v1MjXYQUX9IIuWFiEoCooCM5MuRiemsduTcMbHUbByK+uXlZKbav/y
      Mfzd3/3d3317v1rVw0KRQnhCAotKFmELTSKml7A6NxWNIIAi4xrpp7urn4SS7exanYugyCTn
      5BFntpKZm4tFI5Oav5j1S3Ooq6ojpXgNizId6KyJFOUWUJgTT3tdPSmL11GQ7kRntJKTk45G
      NrB43WbSlSHq+kKs2rSF1Ysz6ayrJa5gFYtyktEKAAp6WyLZaU4cSVmkxZmxONPITI6ewIpv
      hq7uTtra2jDnrCLTEmI0ZGFRdjr52WlYDdA9FuGp555hxeJ8PD1N+OIWsaY4A43WQHp2Lv/3
      //n3fy+oSyFUsUpdCqGKeWoAqG4ji34uH93He/sO0zPhQwlO0Nw+hHSX+0d8Ls4d3c8f3vkj
      17smuO3e+iuCMyN09Llme/gy423lvP32Ifq9wT+r/TODffRPTNBx9RS1/b5v3FYdBlXdJthX
      zsG6AD95NIn29j76ug5xbDCPX/38cfw9rQx5BJauWYt+qp3WYS9BX5iiVWvJTrAAIif3/YFw
      6fO8tt3E52XXKUjdhm+4lebeSbJLV5OfqKW5tppJ0cGKJdmc3/cmDdIa/v1fPoMlOMJnH+5n
      tHAvnpYqLoUgMacUe6CPtkEPaUVLyTV5aOgZJxIK4nDGMTE+Q/6KNeQmWsE3zr633iRctIXc
      mQZ6ewWme+0sXrkSa3CIqoZenNklLC1KB9QrgOoOdEmFFNJLeXeEovw0nA4rtoQkxutOcaR6
      lHixj30fn6al+gwfnW/HLg3y8aGzeGQAF619sKQgE5M9mxf27kaeaObDTy6SkGzk8AcfUFNz
      kfcPl9N1/Qw1/UHibBbiUpIxaQS0BhMOq4X0jEwaz3zM9VEJZ6iDdw6WYzTC8ff/SH1LDUfP
      1hEca+B3R6qRp5o4VFYXbbzBSrzVjDMlCaMWRFnPdPM5Pi9v4PAHH9A71s/Rj96n3RWd+lMD
      4BvIkkgwFOaOV3BFJhQMIn7N9V0SwwTDN+dXFUUmFPDj8weRZAVFloiI0p3f+/b/DEWWCAb8
      +Px+IqLMXEMXsiQhSneeR52LzpLO67/8Swp0few7dBmz3YrVmYB/dJyURaWsXFGCe6QHT1BL
      UmYuJflZeMcH8YYBzFjMMsFwBEWRCASCuKcHCVvzWblsDc7ICAFzBhsKDDR1juDyhHDYzDgS
      EzAKAjqDCZvFTEJCIjqthcy8bCyhCWR7LstWlhKvGWNwEhypeRRlxmOKSyI3I4lIOBRtvN5C
      nNVMXGICRg1kLVpKcXYi0zMT9PaNYXGms2HLRuJnZ/7ULtA3mGy9yFvnJ/irX72E9as/9Pfx
      z//9fbb/6D+yNsdy2759lQf5pDOT//zGNgDc/VX8+p3TGDUiy5/9GUvleq6689i7o4TbV7N8
      maJA68WDnG7xYNX58VuW8otXdmDQfv33V9PFTxl1ruWxlTn3dtDATG8F//xhBUlxAsmZydjt
      IUYv1GF6spjx86d4t0micO1jJAXOM1pdzUG3TNbS7SSaAOLYvWsJx48dpNUhM+RL5tU9S0gN
      H+Td9wfwpKwjU+ejYlJDcX4Keq2A1Wal53oNk9uLSNLf3h5H/iqST/yRD98fwmtfxaZ06Jn5
      +vZb7XqarteRFwZhdgJDZ4hjzdJMmrs76NcksGJj9NRXh0G/gavp7JcCYLS1nCNnqxibknj1
      J89w8Ne/RZ+xCDEis/fV5+i9dJy2cTdJJbtYbmzk856sGwEwVn+U//ZJDz//4fdIsWn5/N3/
      l6qZEn78agnlZ2oQJYllT7yGsXkfp3p1xMs+Fj3+Oo+tyECQJvjv/8dv2PtXf0t+vA6PP4JR
      muLIwU8ZDUnE529nV0GIfYfOI2vs7Nm7m9N//DUu8yb+8//6A+Lv8bgVWcLrdhORBSx2OwZB
      ZMYdwGK3IgZ8hCSw2R20HfsNR6YX8RdPr8Fid9xYmKZIIj6fl5AoY7Y6MBs0hAM+fMEIJosD
      s0HA73UTkjTYHHY0UhC3N4I93oFeUAj6fCgGKwQ9YLRiNmgJ+T34ghJGiw2TRsQfETDrZXxh
      AasBAqIGuyX6tR4JevEFJfQ6DRqDFZ0cIIQekyDi8QXRmW3YzAY0giCoV4B7IMkQH++kv+Us
      nWNPoTFYWbf7OTzn3uTk6YsM1TaSlpdGU30Necu+/L2eULyN17eGOPTBeyx74jWWFecRMGxh
      rOIozrXP8WzqAP/wyWk2On1Y8x7l1fxR3jx3hQ2LX8Kh8eINGLEa9Gh0BuIcRjrLP2dAKOEv
      fryc//lff0undTnTk24MDj2iJZNlBVm4Szff88kPIGi02J237qklPiF6chn1zhtXw7yNz/B9
      yU5CgvPL+2t12BxObLe8ZrTYMd5yobQ64m9eVbUWEhJu7I3JOjtbq4+7ZX/HLfvrsRuif4ub
      /fOLfwPoTTacX1oIaiV6YTEQb/zy1VoNgHvQePEkk2k7KEx3IACyKBIIhgiHJcyJJizxWTz3
      4tM0tXqw6r+8GtHV2YDLuZLvbfJw6HobaWmgyDIGkxav24/f4kVnsqLVyPh9AcLhMDqDCa0G
      BCGNwlQvrYNTOOQAp8sHKEk0EAm4CYY8hAQTFqOdJRs2Emi/TEXTEIWKgiLLKHDHZQzunioO
      nmsAQUNG6SYe2bDoLk6GIE2XLqEp2kppqglbcvaXTvJ7IXn7OVUxwo7t6zHfodvzTdz99Rw9
      X01o9hZr5aMvsSr7Zkv6asro1ZeyfWkGAKMtV+mQs9i6JPO291KXQnwDKRJipK+Z6srrVHdN
      smrFIka6e7AkZ5OUnkW8QcIz2o8veSUvPrmNDIOX8+UtFK/bTJpZQjYmUZgVXXeuM2ppLz9D
      85SNp5/dRVaCmdbaTlbteQypq5rKfoFXvv89/O1X6Z0OMObW8fTzT5Nq1QFaiksLaa0o42rj
      AKVrNrG4pBhrsI+zV9vZ/tz3WZqbwGhXM25TIc89voEEs0xz/SB5q4q5w6p4JpsvcGUqm9ee
      KOLkgY+xpOfQ0dTIiMuHHg+VlTUENA4Edx+9bgGLOEFL3xRmgwaTMxXB3UtlVS0jPoF0u8z1
      xnZMNgst15uwpzgZbK7helMXBmcadpMOAQW/q4/yiuuMeSHROM6+z5pYs6qI7oZKGjuHsCWl
      Ibo6qWvvobO1E+zJmMUJrpVXMjQxjjtsJNlpwWBPojTDyvkLtex6/RcsTjYw2lFPZV0rosHJ
      eO1hzrQHUDzj6OPTmW44TfmkgyXxIa5W1uKWTCQl2Pjf/15dCvHAqT3+R7rjNvL8pqL7+v8M
      X/mAf6nSsXe9k7ILzTy2OZffn+jmZy8+QnXZcYwFmXQ3z7B7UwZl7TqeSBugUb+ChK5zGHZ8
      n5Hj+0lZv5XRqrMUbXmE06cv8NIPX+XAP77Lj/7mBT55+yOc6SkImdt5Y88KDHKI8s8PM45E
      bU0fL736CB8ebGTPKiOXhyzsyPRwaTyNnSn9/KnJzFOZE9SJJSwTWuk2rSR54gw9zqf42xfX
      Rg9gqov/8dtPeeav/xNFmmEOfnIenX6KalcaO51tnHAV8mqJl5Mj2TyS2EN5pITk/vOEU7IY
      7Hbxwi//htIkvboU4kGz8sk37vvJH6UQ8s4wFTax5+UfkGcHR3wGqYkWxobHscSls2nLWvKK
      V2FxtXC+bZJVy7Oj4+Z+F6NhE0tWrKY01UD7wNTsIrroSkydLYU1ywrobO/E55lCFEGWZXy+
      CbxBGUUMEJ6dVh7tGyGjdDGrV5Uy2d+JL6glLSefkvxMxOAUo2Ne8kqWUZCTztf1lMKBAD6/
      m5AkEAkEUBRIzS1kRXEuI8O9BCMgiT56+sYwx6WxYfN64vTR7301AGKWhsTsUrZt38bSvOQb
      r5rikli+OIXBjjYa20fQO9PYtkjLmFBIbrIjupE9h+VpcGz/+1wcMrJz+2oydUEunr/AdAgi
      gWl6+iYoXlKAIgFCdGRprH+AmUAIUZIIhqLj9sVrVjBw5STv7j/H4k3bibeAgBDdSbBRvCST
      a8f3U17fy9c9fCaGvAwPjuINi4TCQWRZpr/hCu8fLWfF6o3YjdFh0NVLMxjq7aKudRCdIRpO
      ahcoRkkhPz5Ri91qjN7QhwO4QwoOmxkp5MftC2K0OLCadUhBH35Rh81qIOTzgtGGTg7i9QYQ
      DBbi7CaCnhkCYvTUtcfZEf0evEERi92J2agFRYkOZYYktBoBk9lEKCRhsxoJeD2EJLDHOdFE
      /ARkHRadjD8i0X72Q8r6TaRqhjEv3svL22evjrKIxxvAZLOjQ8Tr9hBBQCNoMekUghEFSZKw
      xjnRRvwEMWDWiLi9AfRmGzaLEY0gCGoAqB5oIfcY7d1DyHobeQW5OEz3OGT0DQQ1AFSxTFAn
      wlQPPEWk+eR7tCQ9RVz9bzk7YifTImMu2MLLT27Eco9n8HBDGcfbjfzwha2AOhGmesBJQQ+X
      K4fZ8jcJDDYYWfvYCzy7XMs//z8f0LE0h6nrp2gZ85FQsIZSQz9dxrUkDx2lN3E7S/w19Bly
      GWppweJUCJqW8Pq2TDwnTtHv2QKoo0CqB1woOM1gWE+66eapqjU6MAsBBjqucrZV4fU3nmOq
      9izjER2ttReprmiiprKWirpB0pJ1uDywZfdOemqqiJjtxONldDL6sI0aAKoHmoAGAeVLy8ZF
      9xherZOUhDgUSUSSJGRFgy13Baaec8ykryfL00K9PosSm4DBYMNis2IyKNG5CkA7OwWmdoFU
      DzSD2UmuRWLAJ5GUmkpzxVHerjGy+qm9rChORJia5sBHJ8jZ9iyr8rJQtm3DlbKdzEkTWdaV
      6C1QkB/GqDVRVJQPnmmmNUlkpkRXz6mjQKoHmyLRefEALY5dPL0y5Y4L++7FSPMFLg/a2Lt7
      NTp1GFQVy+44DBoMBpmenp6P9qhU3zn1CqCKWXc1EaYoMqIooqBBr9MiCP/WXpjq26LIEpGI
      CBrtLZ+NQiQcQQZ0Oj1ajfp5fZM5A2C89TLvf36NsGLi5X/3c/LjDXPtovqO9NUc4+NzPQQC
      Eq/+1S8oireAt5s3f30QRS+RuelFXtryXSytfnjNOQ/QXd9A8vrdbEzxUtOl3hs8SIb6Btn4
      7OtszNAyPBOd2PH0tWJcsYeXn1nNRO/oPLfwwTdnAIRDYXR6HTqtllDoPpUDUf1ZJFlGo9Gi
      1cpEIrOJBSUZQaNBoxUQw+Ic76CaMwBscWY8kx5mPEHi42/LjqOaRwmJCXi9HnwRA0lx0WXC
      tpRkBLcbrydCXErcHO+gmjMAlux4jkx/G9PZu9hR5Pgu2qS6S3krNuCtP44nbTmFVpmqigYi
      KatYaunkQpOPTWuL57uJDzx1GFQVs9T6AKqYpwaAKqbdNg+gKAqy/OdlFVapHja3BYAsy0Qi
      6nCnKjaoXSBVTLurAAh7x2hqH+DPrLeguo8UOUh7awch8YsPJ0x7TQXl12oYc/95NbZiyZwB
      EJjq4/Cffs9Hp6oQ1QB4sCgSQ/UXeefTMrzB6IcjjTVxpnaUwFgDp662z3MDH3xzBsBYXxsB
      oxPjd9Ea1T1Q8E/2UdmroSDp5qu+8REMWSUsWZyF3+Wev+Y9JOYMgNyVu/neziXqzcIDR+T6
      meOMedwMDwzRMRytGaTVRtMQgoBOp35qc1Efin9oaVn52Mvk+4N8NtNLWpyOsREX8VmF6Ctq
      qQ0EScreMN+NfODdthRCkqTbhkEjfhfdIxEK89L5hrpsqnmgKDIDfb2kpqfhGnOTkpXMaEcj
      Y34t+UXFOO81dVoMMZvNtz8Uf6cAUKkWIrPZrK4FUsU2NQBUMe22DqIgCOh0ar9RFRvU5wFU
      MUt9HkAV8+bs6/jGOzl2/CxTQip7X3iSZMu3V6JGda8UxKCHy8cukP/UE9hdLRz5vJxIXC7P
      P/so8WYdoBD2DnPxbBPLdu8m5U5Fgh9wiqIQGG/lbJWbHXtW03v+cy61j5GUu4Y9u/I49vb7
      TBDP+j1PsiorEZQI109/SmX3NPlrHmVtepjTZZcJxhXzytPraDh9hCa3k70v7KKv+gpJJRtI
      c0TT+8y9FsjrIWv1IxRE6jlTP3HfD171DUQftZfOcOpsJTOiTGdNJZmbnyNlopmWKe/sRjNc
      /OxzLlQ14ZPmtbV/Ntk3wMnDx7jW3Ec4HKC+cZSnfvxTXnx8DdrpLsZ0pfzoZ69HT34ATw/V
      PVqefXkLjZcuMz4VYt2jT2LqqqRjcoD26TgK9L3U1l6nxWXFabuZ22rOAEjKX0mpw835uhFS
      Ey337aBVd0FrYfnGHZRmRpMT+INBzGYLVquAz/NFChQ7257YSUacef7a+W+ksaTz1O7NWI1a
      JBkcSRrK3vkN7x26zMyMjBDp5e3f/ZbLLbN5jwJBQgYTZpMdRfSRWrAUhuvoV8yYdGkUJ7jp
      CqUz1d1FcnyQ1rb+GyVX5wwA/1gnf3rnQxI2vcSGPNt9PGzVnAQNBr3+Ropwq9WKGIkgKiYc
      ti96s1oMhod7FE/Q6DDotABoDWY2P/4yP/rxXpTeeiZtxfzgjR/z1IZMmpt7ojuYzFiIpvA0
      m+2E/B5Slz/GU6VQ0ephze4X2LslFUmrp6d1iI6qM/RGl07NHQCtFce42j6DMt1Gfa+6uvCB
      MBsBWYWF1Bx9j+opA9lmkaqKBr54AkAQ+Dfn0p9XAiAISBE/5cc/4ve//wQ5ZznOYDsf/OFf
      OXxlgCWLs2gvr2TMmkGeYYA/vnUAS85ipnsq+eDtP1DWrWV9SRJEPFyt6Gbtji0YAkOM+PRY
      Z3tB6jCoKmapw6CqmKcGgCqmqQGgimm3DReoy6FVsUS9AqhimhoAqpg254zJWOtF/nj4KhFt
      HK//4idk2dW1QPNHwTPSxjv/8hmP/i//nhK9RNOFg5wbzeXnr23DNLvNaPtl9h9u4tm//CW5
      C6ykg2+4lrc+vIBg0LFi5/NsW5KGEnTx6b4DjEQELKnLeOXJ1bRfPcrJLjv/6fUNfP7BR/T6
      jDz3w5doKztN6c49ZMbd5VqguKxlvPbKs9jEGbxqYqD5FfHS2zeB1iCgAN7JQfx+mdCXZnKm
      GehzoyzQYobjHY0kr9/L05tz6ewcACA8McCIPp/XfvAinr4GxoeHmI5EEMIKiH4ixhSynQod
      VVeRs1ffWAgHdxEARquTeJsRm0PP1GTg/h2Zam56O8tWrSBxdkWuI3URq0syv7JRPGs3L8Vm
      fLiXQ3yd5OKVzFw/wqW6YYJiCABDYg7ZQj/7D53Fp2iwJWWzbHEeegBTGpvWFpFesgbP5ATh
      7ot8eqIC/+x3+ZwBMNJWTfO0ljxbhN4Rz308NJVqbhr0bH7uB2wozSQnIwUAQVHIXP4Irzyz
      iYykZAx63Zf2SCtcTKZuFHNCMh5NDonBNnqmvvjpHKwOO90VZxiwrmbP2oz7cUyqe6HRkVlU
      gGM2P41gS6YoOxFtxE1NVVN0LZDWTG5BLgsxI4re4aS//DPqXBbWL8uk41o14zoLwmQzh45e
      Yc2OR7HoNehNCRTkpUbXQ0V8DHjj2bx1E7mGQVzGInLjo++npkVRxSw1LYoq5qkBoIppd+wl
      Cgt0CE2l+ir1eQBVzFKfB1DFvLsKACnio6WhlYBaI2neKbLIUGcXbjGa8kHyu+jqcyF9aZsA
      /V29+MQ7v8fDTJaCtNVWUlXbzLT/i9FKmbGeZq5dq6J3zE3IN0VjTSVVde2EZJnR7iZqm3qJ
      AK6RfrzBm7+tuQNAlui59jn/7c2PmAwtwN/ow0SOMNB4iTf/xzv0h0RCnlFO7X+bA2cbuTlw
      Habh/BHeevcTxkLz2Nb7JDR4nZNV/fTVnuFcfX/0xeAoZSfKmQkM8Mmh87RWXaSmZ5TG0x9R
      0zPIhUsNtFedpmVwgMuXm7n11zJnAHjHWjh2dZTkuPt0RKq7J0eQjWkUZsWhAJIoUVJUyJfT
      /4SwJeSQ5FiYKWymhwdwLlrDiiWpuMdmcyG5J5gyZbBu/Vo0/lHGR6fIXrKS5Xk2hicldOIU
      w9MiA9WVJK1eT6JJe+P95giACBePHCZgsqL4J2jvGechzbW0MOgs5OZmYpgdpLPEZ5B5W64m
      O/mFqegW6ECeTqslOmqjQftFCSiNBq3wxV+1aLRahNmhHa0xie/96Bf8/IdP4vX7afvsHf7p
      t/sYnk2fMUcAaNjwzBvs3bkaq9lCotP6cKfaWMjkMK7xKRZ6J9WeU0ikp4GWrhlSMh3MjLkI
      xKWSrrioq23ElJBNRk4aox3NtA0L5GVY0Agi7deryVuxHIMzj3RrCO9sANzVMKgshmhtbiN3
      8VIsauG1+SVF6GntwFlcjFOnRXYP0+zSUJrrYKBvkoz8TPSil46OYdKKFmFbYOuBFDlCR30V
      LtHG0iXFBIaHsOTlEB5so6V3kqzSlWRaRVqamvBokli/qgidHKKnz0VWfjoDjdeZEpJZtiQX
      gyDcXiJJpYoV6jyAKuapAaCKabf1EGVZRpLUsR5VbLgtABRFUQNAFTPULpAqps0ZAMGpIT7d
      9wfefvttmkYW4Nz6Q0VBjvi5drKMoVAERZHxjzZTdqXtlqUQCmLQxZWyi7gW4Mclhac49sHb
      vLPvU3pcvhuvy2KAxkvH6ZgE71gXhz54h7f3HWMmEqb+3GE+PHwRnyzTVlvBmDt8Y785A2DG
      1UlfOJOf/OQnLEkz3p+jUt0d0U/95TKOnihnWpLxjrVz4tBn1HSP3TJD7+HyZ59xprxuQS6G
      83ZcYyxxA2vSAlxrHJh9NULLtTKOnjjLuA+6669jX7KVIrmZypZeWids5Gi6qW2op2nEgONe
      SiR5XSO4eur49a//lcZhNSvEvNKaKFm9mdKsaIkkS0Ieu7et/MpGFtbv2kp63MJcCxTweTFa
      bVjtRkKeL77JtRSu2sCynGQAwqEwRosZu82MV7ST75im05/EdE8nyUkyvb0jN2bM5wyA+MwV
      /OCnP2JLdoRrzSP36bBUd0XQYjIZb3xoWr0Ro177lY10mM0GFupDfSaLBUWMIElarDe+yTUY
      zaYb64H0JhOKKCFJYLPHs3b38+zdno2Ilp6mbhqvnqHf/cWec/CMdXHskwNc7hZZXph6nw5L
      9W8W8VBf08oC7PZ/iTV3KaH6zzlRMUhWrpPu6jomvvKcSkZuNu0Xj3KmS0NJph4iXiorOli5
      bSPGyARTQS2m2Qyfc6ZFUeRo8TFF0KDXadXnheeboiCKIhqdDo0goMgSogw6rQZJktHqtAiK
      jCjKs9vMd4O/XYqiIIkRZEVAp9ehSBKCVotGAEkUQaNHI8iIkVvOWUCUZLQ6DVIkgowGvV6H
      xWy+fS2QmhdIFSvUvECqmKcGgCqm3dYFUhQFdYW0KhZotVrhtrVAgiCoN7qqmKF2gVQxbc4H
      5mYG6jjw6TlGpiN87+e/YlnqwpxhfDgoeEfbeedfjvDIf4mWSGq5dIgzQ9n8/PWbJZLGOsvZ
      f6iBZxZgiaTwVCv/8tvDhDQaNjzzOjsWp4Hk5ug779DuC2NJ38wTxREOn6nC7ZZ45a9/TuuR
      D+n2mnnhJy/RevoUJTufIutuSyS1V15FSl/KU0/uJMWi1gebVxEvHR1DhMUIkgIeVx8ulw+P
      eOvy9Wm62kbwR0QWYhqzme4m4tY/z3Nbshjom4i+OD3IgJDPGz95nuBgO90d/Szd/SK7i7W0
      97gI6FPJd0ZorbxKKHXFvZVICvinGB8ZoOLMCWr7pu/bganugt7OqnXrSLVHP8C49FI2L8/5
      ykbxbNqxmrgFWiJJjETQ6vToDALh4OyKHlFC1GjR6QxIYggxLKLRadHrtQSIZ6DdXm0AABNA
      SURBVPOqbJwFq3GPjSIPXObTE9cIzI7zzF0kLz6VzMJlrMm30D8ycz+PTaWakyM5BdHjIeAT
      iE+e7Y47HMTLIXx+PxZbAs7keERfAL8fUlPiyVq8mkKrC2NCEtNyNvHeBjpnLx5zBsCiTY+S
      ONXAdW82e9Zn389jU90NjZa0/FxsX5RIsiaRnxGPJuKmqqLhRomkrNwszF9dJ7cAmLJWkzJz
      lfJehRWLUmkvr2TMkM7KIoGjH5+jeONGSpcvZ6bxPA1yASvTNBDx0j1pY+v2rWRpexnRFnx9
      iSSVKlaoaVFUMU8NAFVMu2NWCLVXpIoVd8wLpC6HVsUKtQukimlzzpZMj3TTPx4tROBMLyA7
      aYHNrT9kFFnCNTiMJSMDq1aDFJxmeEohPT2e6KinzGhPBxNhHdk5OdhNC2tCTJbD9LW14ono
      ScvLJdluBhTc4wMMjHtJzirAqQvR09dHMKIjt7SYyGg3rpCZwsIMvK4RDPZkLMbob2vOK4Ak
      Rgh6J/n8w/dpmwje7+NTfRNFZKTtKr/5x3fpC0WI+Fyc/+RdDpy5pUTSZBsHT1yjs+4SZdd7
      5rGx94cY6OX4sWt4g2EkefZeNezi9JGT9Ay1cvjzqwx2VnO+qpNwOIwcHOPChWoayk/RPjrK
      5Uv1+G9ZIzJnACRmFZNt80POVrYWxt+v41LdDSlMSEggL8OOAoRDIfJyc79ctcfswCa7mfBI
      JMTb56mh90+ov5uhYJCRyWkEzezVTWciziIwMjhJfEoS0yMDzMxMMjAZxGTQo5N9TPkk+quv
      Eb9iHUnmuy6RBIgzXCtvZvXWLRi16i3DvNJZyMvPulEiyZqQSVaS7UubTHXVE8nawPb1efS0
      ds9DI+8va9Eu/re//SnLEjycvtQEQMQ1QE8kiSf2PMJkdx15m1/kVz99hbxIPSeaFJ58+Qe8
      8sIj+AIBek7v4/e3FBCcs4MoeqYZnIZHc5wLNtfMgiBHmHEHEAwm5KCbGU8QjXbh3a/N9F6n
      2uXA7gths5nwTk2j0erQKWGmJmdAq6O3sYKwOQW/X8FhM6LXaxhqaSCrpITuxkFShSncgej7
      zZkVQgrM0Nw6SMGqJahPAjwApAhdTa3EL15MvE6LPDNIw7iWpXkO+nonyCxIo7e2ipGAgSXL
      l5F4SxrAhUAWfTRUVuPWOlmxvBhf/yDWwhwCPa20DkySu3gNaSY/DQ3NBI1pbFy9CJ0UpKt3
      nOzCTPrrrjEhpLJqeT4ONS2KKpapaVFUMU8NAFVMu2NWCJ1uYU2eqFRfR30eQBWz1OcBVDFv
      zr5OcHqQspNlTOiy2PvMDhyGBfic3UNDQZHC1J4vJ3XrVsxjzRw7XYk+YzlP7VqDRa9hsqOC
      Q+frkGRwFKzn1Ue/WkDj4SaLAS4f/ZheKYXHd+8kxW5AUUTayk9xpX2azU98D6n9BJdbXQAs
      3v4ccaMVNEwnsPe5LQw0VOLIXUmq4y7TonSWf0arnI196AwXO7z39+hU30wMUHv+c/YdKGMi
      EmJ0xM22va8RN3iJ8p4pABKKNvDvfvYT1hckkpGePs8N/vaFe69wzZ3FIv0wFxr7oi/6XLi0
      2Ty7PZOTx69QsPV5fvrGiySbbBSkeGkYNpOttFJVX0ttr3BvJZISsxcR6i6nbjqOgiS1Rti8
      0hgoWrmFZblOQEfJuq1kWEUkWwa5CeYbmwVG2mjxJrKmOHn+2nq/OLKwTlZTNSRRkJYIgGBL
      Y11pMlcu1xKfmoBGURjvqkHJWU1aXAa5NhdtngSmOttJzdAzNDB29yWS+pqbydi4hx3ZIleb
      1BJJ80qjw2a13PjQxMA0186fIX75TvISbs7T93T0kFFUiEW78NauDDddxb7mJfasTaGmrgMA
      RYogG+PZ88JrTLZdwR/00NE8SsnyQgSNmc3PfJ9XH19EWILO6w1UnD1+o0TSnPcAqbk5nLt0
      AVdYw45diff14FT3IsCFA29xbtjAkgmJeMcWQuPTLFpRzJBrkpyiuPlu4H2RnL+YicPHKDMJ
      FKxfRk9NPdb8eC4cPUdEo5BcuBpzZIqekJM18bOnd8TL1cvNrN65laufHMYbtqGf/dGcw6CK
      JOIP+JEFPVaLCY26Im5+KQrBQACd2YTo9xOWZEDAZDEjixIGkxExFESrN6JdaPWRAEWRCfp8
      iGgxW0zI4TBaoxEp5CcYljFarBg0CsGwhMlkQABQZIKhCEaTgZDfh4geq8WIRhBuXwukUsUK
      dR5AFfPUAFDFtNtugiVJQhTFO22rUi04dxwFUm8LVLFC7QKpYtqc8wCjrZf5pKwG2ZjE86+8
      QLpdrRIzfxT8rl4+evc4W371U0ydlzlV3oVsy+DF5x8n3qQD0c2JAwfp80PxusfYsTxrvhv9
      rZICLj478CljYT2rdu5hXWEyIHLugzdp8DgoXLaOR9cV0lt7hrJOE798aQ1lHx+ky2vmudee
      o+P8WQo3P0bG3a4F6q2vw7Z0G0uNg5S3Ttzv41N9k4iX9rYe3B4vEQXi0krY8/STaNyD+EPR
      +7ZAfw0jliXsfmQbOQswiZmnpwpv8loe27mJtLhoVTQiLoamTGx67Am2rCwiMDlE3/gYXncI
      Im48mmTy44K0Xa/E5ywhxX4Pa4EyFxUxWn2W6p4xxifVEknzSm9n5bp1pMVF12Q5klKQZ0bR
      G4x4w9HsQNPj44wMdlB19SLVbQtv6crk6ChD/e1UXDlPU290ASCSkUUrS5hsr+Dg0XMYEnJZ
      s6oYI4ApnbWLkzCkL8M9OopmvJrj5+qYzYoydwDYkvN44rkXWJ2XTk5myn07MNW9Uhjp6cSc
      u4qShDAD49E8H86kJBIzitmyrpjR/oF5buO3z5mcQmrOUjYuy2RoMBrgsixjTy9ix/atBF09
      hMVbywNqyVm6nsXxMxjinExG0rDN1NF1tyWSUMLUnj/OkH0Fmxfo+pKHiqAlKSMdi0aDVvZx
      8uM/0aMtZk22hpqqJoSc9ZRoOzhxpYeNW9bMd2u/dXFFm8nwV3Ou0cPGtYV0XKtmQqNnuuMq
      +w4cZfHmJ7EZtegMdtLTZjMZRrx0jhnYuHUTafQyQhaZs6eymhZFFbPUtCiqmKcGgCqm3XEe
      QFCXPKtihLocWhWz1OXQqph3VwEgBmfoH55AVhR8UyO0t3cwHRBRLx3fPUWWmBgexi/JRIJu
      utvb6B+dRrpxIVeYHu2jvbMbd2DhjeYpcpiBzjbaOvvwhr5YtRw95tbWdkan/USCHno722jr
      GiSiyEyN9NLZO4oIuCfHCYRvlhSZMwAivgnK9v+ON/efI+xzcfTAR1RXXeBPh8sJimoIfKcU
      ibH2q/zj//UbuoNhOqvKuNbUxeGPDzLqDUc3CfRz9LMLtDRVc6G6c54b/O0LjdTx8YkKKk4f
      5Gz9YPTF8DgnPzlGU8c1Pvj4PO3VFyiruE7Z/reo7x+h7MRFyk8foWN8nPNlV/Hcct7OGQAD
      TVdom5AwKBCaHKJvys6OF7cz01iPPyTNtbvq2yQGcEfs5GU6UBAo3foMG3IsBCQB3ezAxUx7
      HZOmeLR6JytKc+e5wd++qf5uEpdtZ/OaLKZHZlM7TI/hMufyyKM70HqGGB50Ubh2KxsX2ekf
      C6IhjD8k0331Mo5VW0ix3Bz7mTMAslc9zmtPr0NLdMpZURQEZgtq36eDVH0NvY1Fi/Ix3hik
      05G2aAXL4wO0DEeTlgWDAYKSkZzEMEdPVsxbU+8X7Y0yXQJ88XsQNDdPZAEEjYYvTk7BkMRT
      L77I3r2P4vP76Cv7gN+9c4jx2cVAcwaATm9Er4v+T0ZHPE6jj67rnejTMzHq1TSJ80em7VoZ
      rcM+BK0BvVbG4/ERn1NAnCASlmS0uoX3+dgzcwgPddE/6Ccp3U7A7SEcl0SKMk1XVw/GuAxS
      M1OYHuyj3wVZaTZMFguTnQ2kLypGsOeTbphm0h99v7u6CTYmFPH49uUYnLk8v3cnnikN3//+
      k9gM6nzBd05nYPUjO0gzGMheVMp0dy3m0l2szTQxNDCKkLaG3cutuHx2nt69br5b+60zpqxk
      bZZI2LmIDSVpTAwM4tMmsWXrIkZ7fex8YgvFK9aRqvViXLyL5ckCyBFIWsaG1atZV2TCUbSZ
      /NllQuo8gCpmqfMAqpinBoAqpt22FkiWZWRZvtO2KtWCc1sAKIqi5gVSxQy1C6SKaXcVAMHJ
      Ls5eaUSUQZECNFw+SY/6fPy8UKQwjVfKGQtHr9Ky5OXKxav4bszKB7ly9AAffnyUrrGFV9FH
      jri5cGQ/h09fZSb45a76TF8911pH8E8NcOLQRxz47CI+WaTt6kk+PVlJEOhpqcXlublGas4A
      mO6v5Xf//BvO1nQgRbxc/ux9fv/eAQY93/qxqeYiBWgqP8VH+08zIUogh2m5cIqjV2sJRqKj
      2ZG+KhqCWazMFjl3tXWeG/zt8490oy/cQvxMK9XdN7NehGYGOHHkMPU9E9RcLEOXt44iWjhf
      3Uz9gIbEYBO1zY3Udoex3MtSiGBIZPGalZgBxACKNYdlhWp2iHkh6MguWUNpThwKMDHQQo+U
      waKEm5v43W70cfE4Ex1E3IF5a+r9YsteQZFhhNbxIA5TNC+QIgVpqm0ku6gYAJPRwPTEKG5f
      kHGPjnTTBB1uB5Md7SRn2Zkcn+KL6+WcAZBWtJb1izOjyy6MyWzbsZ4Es1pIe15o9DgcNqIL
      HMI0Xj5Pc3MtrW2d1HRFqyIajEaQZRRFg8ls+KZ3eyjJkoQzfzVPbMqlsaELgLCrk/MVDdQ2
      tdJWV0vKym3kWUFjNGO1J7LlmVd4dc8SgqJEV1U1F0+fYHC2d6ieyQ8tAzt+8B/YJkZ4/70/
      sCrXTFtLN3kFSzCeOcKJAZn0NU/PdyO/de7ea3xWMYZR46dw2VIGmlqxlSzmP/6XpfhaTrGv
      N53gQDPNXZOIQSuPP5kEop/KK42s2LqJ6s9PEZRMaGa/+u8qLYosBvEEZBw2CwIyfo8bjcWJ
      SQ2f754i4/N40dvsGDQCiqLg83kxm80EgxHMVhMB9xRBUYPN4cCoW1gDfYoi4pmeQRT0OOw2
      xEAArdWCXhCQIwH8ohazXsHj9oLeQpzNhICMzx/CbDUTmJkiLJiIc1iwms23l0hS8wKpYoWa
      F0gV89QAUMW027pAiqKoFWJUMUGr1Qq33cYKgqAmxlLFDLULpIppcw5kymKIrurjfNZi4Fff
      38aVwx9QN+InsXA7Lz+xCqNWvVp8dxT8E/0cePcYm/7ypywyGwhOtvG7fRW88eMfEG/VQXCY
      d373ITOKliU7n+exFQurRFLE3c3bfziETzCy6emX2ViUDLKPsg/fp2nKT3zeNnblRzh6poIZ
      n45XfvkG7ccP0OGx8vzr36PjwhnyNz5GZtxdlkgaabnAvk/PMz7tR1E05K56hNdf2krL1at4
      g2palO9UxEtzQwvDYy5CsoIcmqH8Qh3ToRmk2ds2f28Dgdxd7H2kiM6W/vlt733g7qpDv+xp
      nliTQGfXWPTFmQE6A2m8+sbTTLY30tnSSeH2Z9mW5ae5a4RJOZVCh4fm6gomzYWkOO6hRJIt
      tZRXX3oME4DOQnZmAlcOfYohuwCzYeFlHXig6e2s3bSF7HgzoNDXVEU4fSVZt5QCC4eCaIxG
      DCYdYV/oa9/qYRUKhtAZjBhMGkL+2fmqcJiIVodBb0ISA4RDYbQGPUajHp8cz9oSG1LiUqaH
      BzG66zl1of7uSyQ5krNIdc4WI5MDnPvoXzk/nsVfvP4YZp3a/Zk/ESbGXHRfP0NjczvVHdFv
      Q1tCIoLPRzAg40y2z3Mbv332xEQkn49QQEN8kiX6os1BnBIhEAxisSXgSHQiB4IEg5CUlEDh
      6u2syQigtzsZ88ajG62i865LJAEag5205DikmWHaxwLEWwKcPHURX1jtAn3nNBriU1Mwa4ys
      ffJVfvmLn7Fj+2Y25JuoqmhATF9Ohq+az8sHWLK0YL5b+62zZK/CPnyec60BSguTaS+vZMyU
      xtKMIIc+PEn2yjUUL1nMSPVpKj3prEjXQMRDa7/C5u1bSVF6GJbTSXdE309Ni6KKWWpaFFXM
      UwNAFdPumBVCpYoVd8wLpC6HVsUKtQukiml3FQBSyMuYayZaIml6nL6+ATxBSa0PMA8URWbG
      5SI4m71PUURc4xOIX0wFI+Ea6qdvYAhvcOElOFPkCGODffQNjtxS6kjBMzlKX18/k54gYtjP
      8EAffYPjiIqMe2KEwZFJJMDnniIUuZlOZc4AkIIzXDryNm/uP0vEP8nJTz7k7IlP+eBULWE1
      g+J3S5GZ7K7in/7rb+kORkBRcPdU8P/9/mNmAtGTQZnp5MAnp7lc9imfX1t4JZLC403sP3yO
      c0f3c75pKPpiZJLTnxzhWs159h26RGftJU6cv8zRD96iaWicM8fLOHv8CN2TU1w4fZnp8D0E
      QH/jJeqHgugVwJjI82/8jCUperRaPeo88HdM9DPhM5GdbkcBQu4hzta4yUm5eS32DHRhLNnC
      I9sW4x6cmL+23ifT/V0krtjFtrU5TN0okTSKy5zL7scfQeMZYnhgnKINO9hSbKd/zI9GiN7b
      dldcxrZ8M6nWm7e+/z/JBUxeP2R3SAAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
