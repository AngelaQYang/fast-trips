<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9300.16.0315.0125                                -->
<workbook source-build='9.3.0 (9300.16.0315.0125)' source-platform='win' version='9.3' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='VehicleLoads' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='veh_trips' inline='true' name='textscan.1jy0dtw0567gaa1a4yhz41flch6x' version='9.3'>
      <connection class='textscan' directory='C:/Users/lzorn/Documents/fast-trips-develop/sfcta/demand_v0.1_AMpk_withinSF_stochastic_iter3_nocap' filename='veh_trips.csv' password='' server=''>
        <relation name='veh_trips.csv' table='[veh_trips#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='iteration' ordinal='0' />
            <column datatype='string' name='service_id' ordinal='1' />
            <column datatype='string' name='route_id' ordinal='2' />
            <column datatype='string' name='trip_id' ordinal='3' />
            <column datatype='integer' name='stop_sequence' ordinal='4' />
            <column datatype='string' name='stop_id' ordinal='5' />
            <column datatype='datetime' name='arrival_time' ordinal='6' />
            <column datatype='real' name='arrival_time_min' ordinal='7' />
            <column datatype='datetime' name='departure_time' ordinal='8' />
            <column datatype='real' name='departure_time_min' ordinal='9' />
            <column datatype='real' name='travel_time_sec' ordinal='10' />
            <column datatype='real' name='dwell_time_sec' ordinal='11' />
            <column datatype='integer' name='boards' ordinal='12' />
            <column datatype='integer' name='alights' ordinal='13' />
            <column datatype='integer' name='onboard' ordinal='14' />
            <column datatype='integer' name='standees' ordinal='15' />
            <column datatype='real' name='friction' ordinal='16' />
            <column datatype='real' name='overcap' ordinal='17' />
            <column datatype='real' name='msa_boards' ordinal='18' />
            <column datatype='real' name='msa_alights' ordinal='19' />
            <column datatype='real' name='msa_onboard' ordinal='20' />
            <column datatype='real' name='msa_standees' ordinal='21' />
            <column datatype='real' name='msa_friction' ordinal='22' />
            <column datatype='real' name='msa_overcap' ordinal='23' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>iteration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[iteration]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>iteration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>service_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[service_id]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>service_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>route_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[route_id]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>route_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[trip_id]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>trip_id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_sequence</remote-name>
            <remote-type>20</remote-type>
            <local-name>[stop_sequence]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>stop_sequence</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[stop_id]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>stop_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrival_time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[arrival_time]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>arrival_time</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arrival_time_min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arrival_time_min]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>arrival_time_min</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure_time</remote-name>
            <remote-type>135</remote-type>
            <local-name>[departure_time]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>departure_time</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>departure_time_min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[departure_time_min]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>departure_time_min</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>travel_time_sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[travel_time_sec]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>travel_time_sec</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dwell_time_sec</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dwell_time_sec]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>dwell_time_sec</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>boards</remote-name>
            <remote-type>20</remote-type>
            <local-name>[boards]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>boards</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>alights</remote-name>
            <remote-type>20</remote-type>
            <local-name>[alights]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>alights</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onboard</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onboard]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>onboard</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>standees</remote-name>
            <remote-type>20</remote-type>
            <local-name>[standees]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>standees</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>friction</remote-name>
            <remote-type>5</remote-type>
            <local-name>[friction]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>friction</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>overcap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[overcap]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>overcap</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>msa_boards</remote-name>
            <remote-type>5</remote-type>
            <local-name>[msa_boards]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>msa_boards</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>msa_alights</remote-name>
            <remote-type>5</remote-type>
            <local-name>[msa_alights]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>msa_alights</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>msa_onboard</remote-name>
            <remote-type>5</remote-type>
            <local-name>[msa_onboard]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>msa_onboard</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>msa_standees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[msa_standees]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>msa_standees</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>msa_friction</remote-name>
            <remote-type>5</remote-type>
            <local-name>[msa_friction]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>msa_friction</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>msa_overcap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[msa_overcap]</local-name>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias>msa_overcap</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[veh_trips.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Overcap' datatype='real' name='[Calculation_1072138198238289920]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([overcap])/countd([trip_id])' />
      </column>
      <column caption='Trip Count' datatype='integer' name='[Calculation_891431260764229632]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='countd([trip_id])' />
      </column>
      <column caption='Average Dwell Time (min)' datatype='real' name='[Calculation_891431260764487681]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([dwell_time_sec])/60.0)/COUNTD([trip_id])' />
      </column>
      <column caption='Average Travel Time (min)' datatype='real' name='[Calculation_891431260764651522]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([travel_time_sec])/60.0)/COUNTD([trip_id])' />
      </column>
      <column caption='Average Run Time (min)' datatype='real' name='[Calculation_891431260764729347]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_891431260764651522]+[Calculation_891431260764487681]' />
      </column>
      <column caption='Average Onboard' datatype='real' name='[Calculation_891431260765065220]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([onboard])/countd([trip_id])' />
      </column>
      <column caption='Alights (negative)' datatype='integer' name='[Calculation_933933985761660929]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[alights]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Alights' datatype='integer' name='[alights]' role='measure' type='quantitative' />
      <column caption='Arrival Time' datatype='datetime' default-format='*m/d/yyyy h:nn:ss AMPM' name='[arrival_time]' role='dimension' type='quantitative' />
      <column caption='Arrival Time Min' datatype='real' name='[arrival_time_min]' role='measure' type='quantitative' />
      <column caption='Boards' datatype='integer' name='[boards]' role='measure' type='quantitative' />
      <column caption='Departure Time' datatype='datetime' name='[departure_time]' role='dimension' type='quantitative' />
      <column caption='Departure Time Min' datatype='real' name='[departure_time_min]' role='measure' type='quantitative' />
      <column caption='Dwell Time Sec' datatype='real' name='[dwell_time_sec]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Iteration' datatype='integer' name='[iteration]' role='dimension' type='ordinal' />
      <column datatype='real' name='[msa_boards]' role='measure' type='quantitative' />
      <column datatype='real' name='[msa_onboard]' role='measure' type='quantitative' />
      <column datatype='real' name='[msa_overcap]' role='measure' type='quantitative' />
      <column caption='Onboard' datatype='integer' name='[onboard]' role='measure' type='quantitative' />
      <column caption='Overcap' datatype='real' name='[overcap]' role='measure' type='quantitative' />
      <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
      <column caption='Service Id' datatype='string' name='[service_id]' role='dimension' type='nominal' />
      <column caption='Stop Id' datatype='string' name='[stop_id]' role='dimension' type='nominal' />
      <column caption='Stop Sequence' datatype='integer' name='[stop_sequence]' role='measure' type='quantitative' />
      <column caption='Travel Time Sec' datatype='real' name='[travel_time_sec]' role='measure' type='quantitative' />
      <column caption='Trip Id' datatype='string' name='[trip_id]' role='dimension' type='nominal' />
      <column-instance column='[alights]' derivation='Attribute' name='[attr:alights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[boards]' derivation='Attribute' name='[attr:boards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[onboard]' derivation='Attribute' name='[attr:onboard:qk]' pivot='key' type='quantitative' />
      <column-instance column='[overcap]' derivation='Attribute' name='[attr:overcap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_933933985761660929]' derivation='Sum' name='[sum:Calculation_933933985761660929:qk]' pivot='key' type='quantitative' />
      <column-instance column='[alights]' derivation='Sum' name='[sum:alights:qk]' pivot='key' type='quantitative' />
      <column-instance column='[boards]' derivation='Sum' name='[sum:boards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[msa_boards]' derivation='Sum' name='[sum:msa_boards:qk]' pivot='key' type='quantitative' />
      <column-instance column='[msa_onboard]' derivation='Sum' name='[sum:msa_onboard:qk]' pivot='key' type='quantitative' />
      <column-instance column='[msa_overcap]' derivation='Sum' name='[sum:msa_overcap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[onboard]' derivation='Sum' name='[sum:onboard:qk]' pivot='key' type='quantitative' />
      <column-instance column='[overcap]' derivation='Sum' name='[sum:overcap:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\lzorn\Documents\fast-trips-develop\sfcta\demand_v0.1_AMpk_withinSF_stochastic_iter3_nocap\veh_trips.tde' schema='Extract' tablename='Extract' update-time='05/12/2016 12:51:42 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Calculation_933933985761660929]' formula='-[alights]' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3617604' timestamp-start='2016-05-12 00:51:42.347' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Calculation_933933985761660929</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Calculation_933933985761660929]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_933933985761660929</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>-19</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>1</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>alights</remote-name>
              <remote-type>16</remote-type>
              <local-name>[alights]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>alights</remote-alias>
              <ordinal>2</ordinal>
              <family>veh_trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>19</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrival_time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[arrival_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrival_time</remote-alias>
              <ordinal>3</ordinal>
              <family>veh_trips.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>911577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2016-01-01 02:59:56.677#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2016-01-02 05:26:06.318#</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
                <statistic aggregation='Median' datatype='datetime'>#2016-01-01 14:44:00#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arrival_time_min</remote-name>
              <remote-type>5</remote-type>
              <local-name>[arrival_time_min]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arrival_time_min</remote-alias>
              <ordinal>4</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86399</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2692914219.1340795</statistic>
                <statistic aggregation='Avg' datatype='real'>744.39165235721748</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1439.9833333300001</statistic>
                <statistic aggregation='Stdev' datatype='real'>372.90824437862977</statistic>
                <statistic aggregation='StdevP' datatype='real'>372.9081928378489</statistic>
                <statistic aggregation='Var' datatype='real'>139060.55872555188</statistic>
                <statistic aggregation='VarP' datatype='real'>139060.52028559032</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2507648759664.6963</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>boards</remote-name>
              <remote-type>16</remote-type>
              <local-name>[boards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>boards</remote-alias>
              <ordinal>5</ordinal>
              <family>veh_trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>17</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departure_time</remote-name>
              <remote-type>135</remote-type>
              <local-name>[departure_time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departure_time</remote-alias>
              <ordinal>6</ordinal>
              <family>veh_trips.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>931364</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='datetime'>#2016-01-01 03:00:00#</statistic>
                <statistic aggregation='Max' datatype='datetime'>#2016-01-02 05:26:09.641#</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;datetime&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>departure_time_min</remote-name>
              <remote-type>5</remote-type>
              <local-name>[departure_time_min]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>departure_time_min</remote-alias>
              <ordinal>7</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>86400</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2692868174.4005747</statistic>
                <statistic aggregation='Avg' datatype='real'>744.37892439321013</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>1439.9833333300001</statistic>
                <statistic aggregation='Stdev' datatype='real'>372.91151597689611</statistic>
                <statistic aggregation='StdevP' datatype='real'>372.91146443566311</statistic>
                <statistic aggregation='Var' datatype='real'>139062.99874818686</statistic>
                <statistic aggregation='VarP' datatype='real'>139062.96030755082</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2507589036653.4443</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dwell_time_sec</remote-name>
              <remote-type>5</remote-type>
              <local-name>[dwell_time_sec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dwell_time_sec</remote-alias>
              <ordinal>8</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>922</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>30.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>friction</remote-name>
              <remote-type>4</remote-type>
              <local-name>[friction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>friction</remote-alias>
              <ordinal>9</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>51.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iteration</remote-name>
              <remote-type>16</remote-type>
              <local-name>[iteration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iteration</remote-alias>
              <ordinal>10</ordinal>
              <family>veh_trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>3</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>msa_alights</remote-name>
              <remote-type>5</remote-type>
              <local-name>[msa_alights]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>msa_alights</remote-alias>
              <ordinal>11</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>14.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>msa_boards</remote-name>
              <remote-type>5</remote-type>
              <local-name>[msa_boards]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>msa_boards</remote-alias>
              <ordinal>12</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>10.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>msa_friction</remote-name>
              <remote-type>5</remote-type>
              <local-name>[msa_friction]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>msa_friction</remote-alias>
              <ordinal>13</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>84</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>30.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>msa_onboard</remote-name>
              <remote-type>5</remote-type>
              <local-name>[msa_onboard]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>msa_onboard</remote-alias>
              <ordinal>14</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>271</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-1.4210854715200002e-14</statistic>
                <statistic aggregation='Max' datatype='real'>46.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>msa_overcap</remote-name>
              <remote-type>4</remote-type>
              <local-name>[msa_overcap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>msa_overcap</remote-alias>
              <ordinal>15</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
                <statistic aggregation='Median' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>msa_standees</remote-name>
              <remote-type>5</remote-type>
              <local-name>[msa_standees]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>msa_standees</remote-alias>
              <ordinal>16</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>68</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>26.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>onboard</remote-name>
              <remote-type>16</remote-type>
              <local-name>[onboard]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>onboard</remote-alias>
              <ordinal>17</ordinal>
              <family>veh_trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>64</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>overcap</remote-name>
              <remote-type>4</remote-type>
              <local-name>[overcap]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>overcap</remote-alias>
              <ordinal>18</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
                <statistic aggregation='Median' datatype='real'>0.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>route_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[route_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>route_id</remote-alias>
              <ordinal>19</ordinal>
              <family>veh_trips.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1124</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10_WBrkley&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;PRESPHRO&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>service_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[service_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>service_id</remote-alias>
              <ordinal>20</ordinal>
              <family>veh_trips.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>29</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;ac_transit&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;westcat&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>standees</remote-name>
              <remote-type>16</remote-type>
              <local-name>[standees]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>standees</remote-alias>
              <ordinal>21</ordinal>
              <family>veh_trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>44</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stop_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[stop_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stop_id</remote-alias>
              <ordinal>22</ordinal>
              <family>veh_trips.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6185</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;10075&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9888&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stop_sequence</remote-name>
              <remote-type>16</remote-type>
              <local-name>[stop_sequence]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stop_sequence</remote-alias>
              <ordinal>23</ordinal>
              <family>veh_trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>112</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>79097744.0</statistic>
                <statistic aggregation='Avg' datatype='real'>21.864677283638564</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>112</statistic>
                <statistic aggregation='Stdev' datatype='real'>17.109632857891064</statistic>
                <statistic aggregation='StdevP' datatype='real'>17.10963049311675</statistic>
                <statistic aggregation='Var' datatype='real'>292.73953653182554</statistic>
                <statistic aggregation='VarP' datatype='real'>292.73945561099049</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2788462072.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>travel_time_sec</remote-name>
              <remote-type>5</remote-type>
              <local-name>[travel_time_sec]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>travel_time_sec</remote-alias>
              <ordinal>24</ordinal>
              <family>veh_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1707</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>6486.0</statistic>
                <statistic aggregation='Count' datatype='integer'>3587384</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trip_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[trip_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trip_id</remote-alias>
              <ordinal>25</ordinal>
              <family>veh_trips.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>30220</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;1&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;9999&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>3617604</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.334412' measure-ordering='alphabetic' measure-percentage='0.665588' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[attr:alights:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:alights:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[attr:onboard:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:Calculation_933933985761660929:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:msa_overcap:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:msa_boards:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:overcap_msa:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[attr:overcap:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:overcap:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:msa_onboard:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[attr:boards:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Departure Time' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Iteration' />
        <param name='target' value='Departure Time' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Arrival Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='veh_trips' name='textscan.1jy0dtw0567gaa1a4yhz41flch6x' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jy0dtw0567gaa1a4yhz41flch6x'>
            <column caption='Average Dwell Time (min)' datatype='real' name='[Calculation_891431260764487681]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([dwell_time_sec])/60.0)/COUNTD([trip_id])' />
            </column>
            <column caption='Arrival Time' datatype='datetime' default-format='*m/d/yyyy h:nn:ss AMPM' name='[arrival_time]' role='dimension' type='quantitative' />
            <column caption='Dwell Time Sec' datatype='real' name='[dwell_time_sec]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Iteration' datatype='integer' name='[iteration]' role='dimension' type='ordinal' />
            <column-instance column='[iteration]' derivation='None' name='[none:iteration:ok]' pivot='key' type='ordinal' />
            <column-instance column='[trip_id]' derivation='None' name='[none:trip_id:nk]' pivot='key' type='nominal' />
            <column caption='Stop Sequence' datatype='integer' name='[stop_sequence]' role='measure' type='quantitative' />
            <column-instance column='[stop_sequence]' derivation='Sum' name='[sum:stop_sequence:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Id' datatype='string' name='[trip_id]' role='dimension' type='nominal' />
            <column-instance column='[arrival_time]' derivation='Second-Trunc' name='[tsc:arrival_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_891431260764487681]' derivation='User' name='[usr:Calculation_891431260764487681:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]'>
            <groupfilter function='member' level='[none:trip_id:nk]' member='&quot;28629&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]' />
              <lod column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[usr:Calculation_891431260764487681:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:stop_sequence:qk]</rows>
        <cols>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[tsc:arrival_time:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Boards by Route'>
      <table>
        <view>
          <datasources>
            <datasource caption='veh_trips' name='textscan.1jy0dtw0567gaa1a4yhz41flch6x' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jy0dtw0567gaa1a4yhz41flch6x'>
            <column caption='Boards' datatype='integer' name='[boards]' role='measure' type='quantitative' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[service_id]' derivation='None' name='[none:service_id:nk]' pivot='key' type='nominal' />
            <column caption='Overcap' datatype='real' name='[overcap]' role='measure' type='quantitative' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
            <column caption='Service Id' datatype='string' name='[service_id]' role='dimension' type='nominal' />
            <column-instance column='[boards]' derivation='Sum' name='[sum:boards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[overcap]' derivation='Sum' name='[sum:overcap:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:overcap:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]' direction='DESC' using='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' />
          <sort class='computed' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]' direction='DESC' using='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' />
          <slices>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk] / [textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk])</rows>
        <cols>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Boards by Service ID'>
      <table>
        <view>
          <datasources>
            <datasource caption='veh_trips' name='textscan.1jy0dtw0567gaa1a4yhz41flch6x' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jy0dtw0567gaa1a4yhz41flch6x'>
            <column caption='Boards' datatype='integer' name='[boards]' role='measure' type='quantitative' />
            <column-instance column='[service_id]' derivation='None' name='[none:service_id:nk]' pivot='key' type='nominal' />
            <column caption='Overcap' datatype='real' name='[overcap]' role='measure' type='quantitative' />
            <column caption='Service Id' datatype='string' name='[service_id]' role='dimension' type='nominal' />
            <column-instance column='[boards]' derivation='Sum' name='[sum:boards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[overcap]' derivation='Sum' name='[sum:overcap:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:overcap:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]' direction='DESC' using='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' />
          <slices>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</rows>
        <cols>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Crowded Trips'>
      <table>
        <view>
          <datasources>
            <datasource caption='veh_trips' name='textscan.1jy0dtw0567gaa1a4yhz41flch6x' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jy0dtw0567gaa1a4yhz41flch6x'>
            <column caption='Alights' datatype='integer' name='[alights]' role='measure' type='quantitative' />
            <column caption='Boards' datatype='integer' name='[boards]' role='measure' type='quantitative' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[service_id]' derivation='None' name='[none:service_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[trip_id]' derivation='None' name='[none:trip_id:nk]' pivot='key' type='nominal' />
            <column caption='Overcap' datatype='real' name='[overcap]' role='measure' type='quantitative' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
            <column caption='Service Id' datatype='string' name='[service_id]' role='dimension' type='nominal' />
            <column-instance column='[alights]' derivation='Sum' name='[sum:alights:qk]' pivot='key' type='quantitative' />
            <column-instance column='[boards]' derivation='Sum' name='[sum:boards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[overcap]' derivation='Sum' name='[sum:overcap:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Id' datatype='string' name='[trip_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:alights:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:overcap:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:alights:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]'>
            <groupfilter function='member' level='[none:service_id:nk]' member='&quot;sf_muni&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='alphabetic' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]' direction='ASC' />
          <filter class='quantitative' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:overcap:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</column>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</column>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:overcap:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='height-header' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk] / [textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk])</rows>
        <cols>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Departure Time'>
      <table>
        <view>
          <datasources>
            <datasource caption='veh_trips' name='textscan.1jy0dtw0567gaa1a4yhz41flch6x' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jy0dtw0567gaa1a4yhz41flch6x'>
            <column caption='Average Dwell Time (min)' datatype='real' name='[Calculation_891431260764487681]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([dwell_time_sec])/60.0)/COUNTD([trip_id])' />
            </column>
            <column-instance column='[stop_id]' derivation='Attribute' name='[attr:stop_id:nk]' pivot='key' type='nominal' />
            <column caption='Departure Time' datatype='datetime' name='[departure_time]' role='dimension' type='quantitative' />
            <column caption='Dwell Time Sec' datatype='real' name='[dwell_time_sec]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Iteration' datatype='integer' name='[iteration]' role='dimension' type='ordinal' />
            <column-instance column='[iteration]' derivation='None' name='[none:iteration:ok]' pivot='key' type='ordinal' />
            <column-instance column='[trip_id]' derivation='None' name='[none:trip_id:nk]' pivot='key' type='nominal' />
            <column caption='Stop Id' datatype='string' name='[stop_id]' role='dimension' type='nominal' />
            <column caption='Stop Sequence' datatype='integer' name='[stop_sequence]' role='measure' type='quantitative' />
            <column-instance column='[stop_sequence]' derivation='Sum' name='[sum:stop_sequence:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Id' datatype='string' name='[trip_id]' role='dimension' type='nominal' />
            <column-instance column='[departure_time]' derivation='Second-Trunc' name='[tsc:departure_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_891431260764487681]' derivation='User' name='[usr:Calculation_891431260764487681:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]'>
            <groupfilter function='member' level='[none:trip_id:nk]' member='&quot;23502&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]' />
              <lod column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[usr:Calculation_891431260764487681:qk]' />
              <tooltip column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[attr:stop_id:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:stop_sequence:qk]</rows>
        <cols>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[tsc:departure_time:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Overview Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='veh_trips' name='textscan.1jy0dtw0567gaa1a4yhz41flch6x' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jy0dtw0567gaa1a4yhz41flch6x'>
            <column caption='Trip Count' datatype='integer' name='[Calculation_891431260764229632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='countd([trip_id])' />
            </column>
            <column caption='Average Dwell Time (min)' datatype='real' name='[Calculation_891431260764487681]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([dwell_time_sec])/60.0)/COUNTD([trip_id])' />
            </column>
            <column caption='Average Travel Time (min)' datatype='real' name='[Calculation_891431260764651522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([travel_time_sec])/60.0)/COUNTD([trip_id])' />
            </column>
            <column caption='Average Run Time (min)' datatype='real' name='[Calculation_891431260764729347]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_891431260764651522]+[Calculation_891431260764487681]' />
            </column>
            <column caption='Boards' datatype='integer' name='[boards]' role='measure' type='quantitative' />
            <column caption='Dwell Time Sec' datatype='real' name='[dwell_time_sec]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Iteration' datatype='integer' name='[iteration]' role='dimension' type='ordinal' />
            <column-instance column='[iteration]' derivation='None' name='[none:iteration:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[service_id]' derivation='None' name='[none:service_id:nk]' pivot='key' type='nominal' />
            <column caption='Overcap' datatype='real' name='[overcap]' role='measure' type='quantitative' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
            <column caption='Service Id' datatype='string' name='[service_id]' role='dimension' type='nominal' />
            <column-instance column='[boards]' derivation='Sum' name='[sum:boards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[overcap]' derivation='Sum' name='[sum:overcap:qk]' pivot='key' type='quantitative' />
            <column caption='Travel Time Sec' datatype='real' name='[travel_time_sec]' role='measure' type='quantitative' />
            <column caption='Trip Id' datatype='string' name='[trip_id]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_891431260764229632]' derivation='User' name='[usr:Calculation_891431260764229632:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_891431260764487681]' derivation='User' name='[usr:Calculation_891431260764487681:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_891431260764729347]' derivation='User' name='[usr:Calculation_891431260764729347:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:overcap:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[usr:Calculation_891431260764229632:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[usr:Calculation_891431260764487681:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[usr:Calculation_891431260764729347:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:overcap:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[usr:Calculation_891431260764229632:qk]&quot;</bucket>
              <bucket>&quot;[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[usr:Calculation_891431260764487681:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]' direction='DESC' using='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]'>
            <groupfilter function='member' level='[none:iteration:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:service_id:nk]' member='&quot;bart&quot;' />
              <groupfilter function='member' level='[none:service_id:nk]' member='&quot;sf_muni&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</column>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[usr:Calculation_891431260764729347:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[usr:Calculation_891431260764487681:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]' value='44' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk] / ([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk] / [textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]))</rows>
        <cols total='true'>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Route Drilldown'>
      <table>
        <view>
          <datasources>
            <datasource caption='veh_trips' name='textscan.1jy0dtw0567gaa1a4yhz41flch6x' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jy0dtw0567gaa1a4yhz41flch6x'>
            <column caption='Alights (negative)' datatype='integer' name='[Calculation_933933985761660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[alights]' />
            </column>
            <column caption='Alights' datatype='integer' name='[alights]' role='measure' type='quantitative' />
            <column caption='Boards' datatype='integer' name='[boards]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Iteration' datatype='integer' name='[iteration]' role='dimension' type='ordinal' />
            <column-instance column='[iteration]' derivation='None' name='[none:iteration:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[service_id]' derivation='None' name='[none:service_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[stop_sequence]' derivation='None' name='[none:stop_sequence:ok]' pivot='key' type='ordinal' />
            <column caption='Onboard' datatype='integer' name='[onboard]' role='measure' type='quantitative' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
            <column caption='Service Id' datatype='string' name='[service_id]' role='dimension' type='nominal' />
            <column caption='Stop Sequence' datatype='integer' name='[stop_sequence]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_933933985761660929]' derivation='Sum' name='[sum:Calculation_933933985761660929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[boards]' derivation='Sum' name='[sum:boards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[onboard]' derivation='Sum' name='[sum:onboard:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]'>
            <groupfilter from='1' function='range' level='[none:iteration:ok]' to='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]'>
            <groupfilter function='member' level='[none:service_id:nk]' member='&quot;sf_muni&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]</column>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' field-type='quantitative' min='0' range-type='fixedmin' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:Calculation_933933985761660929:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok] * ([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk] + ([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk] + [textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:Calculation_933933985761660929:qk])))</rows>
        <cols>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_sequence:ok]</cols>
        <pages>
          <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Trip Drilldown'>
      <table>
        <view>
          <datasources>
            <datasource caption='veh_trips' name='textscan.1jy0dtw0567gaa1a4yhz41flch6x' />
          </datasources>
          <datasource-dependencies datasource='textscan.1jy0dtw0567gaa1a4yhz41flch6x'>
            <column caption='Alights (negative)' datatype='integer' name='[Calculation_933933985761660929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[alights]' />
            </column>
            <column caption='Alights' datatype='integer' name='[alights]' role='measure' type='quantitative' />
            <column caption='Boards' datatype='integer' name='[boards]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Iteration' datatype='integer' name='[iteration]' role='dimension' type='ordinal' />
            <column-instance column='[iteration]' derivation='None' name='[none:iteration:ok]' pivot='key' type='ordinal' />
            <column-instance column='[route_id]' derivation='None' name='[none:route_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[service_id]' derivation='None' name='[none:service_id:nk]' pivot='key' type='nominal' />
            <column-instance column='[stop_sequence]' derivation='None' name='[none:stop_sequence:ok]' pivot='key' type='ordinal' />
            <column-instance column='[trip_id]' derivation='None' name='[none:trip_id:nk]' pivot='key' type='nominal' />
            <column caption='Onboard' datatype='integer' name='[onboard]' role='measure' type='quantitative' />
            <column caption='Route Id' datatype='string' name='[route_id]' role='dimension' type='nominal' />
            <column caption='Service Id' datatype='string' name='[service_id]' role='dimension' type='nominal' />
            <column caption='Stop Sequence' datatype='integer' name='[stop_sequence]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_933933985761660929]' derivation='Sum' name='[sum:Calculation_933933985761660929:qk]' pivot='key' type='quantitative' />
            <column-instance column='[boards]' derivation='Sum' name='[sum:boards:qk]' pivot='key' type='quantitative' />
            <column-instance column='[onboard]' derivation='Sum' name='[sum:onboard:qk]' pivot='key' type='quantitative' />
            <column caption='Trip Id' datatype='string' name='[trip_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]'>
            <groupfilter from='1' function='range' level='[none:iteration:ok]' to='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]'>
            <groupfilter function='member' level='[none:service_id:nk]' member='&quot;sf_muni&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]'>
            <groupfilter expression='SUM([boards]) &gt; 100' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:trip_id:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]</column>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</column>
            <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk]' field-type='quantitative' fold='true' range-type='independent' scope='rows' synchronized='true' type='space' />
            <format attr='subtitle' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' field-type='quantitative' min='0' range-type='fixedminindependentmax' scope='rows' type='space' />
            <format attr='subtitle' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' y-axis-name='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:Calculation_933933985761660929:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#297a98' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b40f1e' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' y-axis-name='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok] * ([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:boards:qk] + ([textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:onboard:qk] + [textscan.1jy0dtw0567gaa1a4yhz41flch6x].[sum:Calculation_933933985761660929:qk])))</rows>
        <cols>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_sequence:ok]</cols>
        <pages>
          <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]</column>
          <column>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]</column>
        </pages>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='28'>
    <window class='worksheet' name='Boards by Service ID'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Boards by Route'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Overview Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crowded Trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Route Drilldown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;MUN6I&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:direction_id:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_sequence:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Trip Drilldown'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='currpage' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;MUN6I&quot;</bucket>
            <bucket>&quot;20160&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[:Measure Names]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:direction_id:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:route_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:service_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_sequence:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Arrival Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]' type='filter' />
            <card pane-specification-id='2' param='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[tsc:arrival_time:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_sequence:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[tyr:arrival_time:qk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[yr:arrival_time:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[yr:departure_time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Departure Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]' type='filter' />
            <card pane-specification-id='2' param='[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:iteration:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:stop_sequence:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[none:trip_id:nk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[tyr:arrival_time:qk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[tyr:departure_time:qk]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[yr:arrival_time:ok]</field>
            <field>[textscan.1jy0dtw0567gaa1a4yhz41flch6x].[yr:departure_time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Boards by Service ID' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dZ3Qc55ng+39V59xoNHIGSAAkCIJBBJMYJVISSSsnS5blWYf1zPjMnr13
      fL/dc2bP2dkze2ft3XFar+WRg4KVSDFIpCgmMecAAiQIIhE5Njrn7qr7ASCVSBmQKKHJrt8X
      HnZXF96qrqfrrXqf9ylBlmUZhSINCYIgiNPdCIViOikBoEhrSgAo0poSAIq0pgSAIq0pAaBI
      a0oAKNKaEgCKtKae7gYobpNgJ9u2HsWblEAQsOVXs2zJArJMqtuy+i3v7cfl9tz0vWWL6qip
      rpjyOuOhYU5/dJhOVxC9s4z6JfUUZugQvmpjp0AJgLtFuJ9TZy6z7LkfU20dZdsf3yRhzeLh
      hUUkQkGi8SQqrQGjUYeQjBIIhEkioDdZ0cpRgqEYsiig0Rkx6NSfOwj3HjpFR1fvTf90Tlbm
      1AMgOcaB1/7AJe08Hrx3Hv0nd/Da226++9RazCowmEwI8RDhpAqjQUMk4CeWFNAajBg0EAqG
      SMqg0ujRqZIEQ1FQaTGZDajkJOFgkJgkoNUb0KtlAsEIAiAhoDea0WnGOz9KANxFpHiEod5O
      9CYvYbUBu9mIt+0or2/+iJjOSCyZwUPffhRT+/tsOeki4e4lc+V/5IGMBn718gFyFy1j6b1r
      WDqr4HMHxuKFcygvyb/p3y3Mz5lyW2NdDRxujbLhH9cxK1ukyPQQTb9+nQuXk5zY0czGH/8D
      2pO/4v3gQr6zXM+77x5DEJLEsubzzMos3vjtS/hyF1BfW4V29AInuuKoYjILH32WOrmFbQcv
      Egx6If9enlsa51/+dScFNbNRBwZxLvk2T6+dDSgBcJcREEURlUpET4z+YTdi+x5C+Wv50TOL
      OPbb/8bB0y2sz8+hvFRHr7eNzpYOwktAVGey7rnnqDMKN+2CyLJEUpJu/H/JwlpWLVv4pVsa
      9PmIy2ZstvFfYo1Gj0UtELJWMcdxjrbO04Suepm5royeI69zeTBBVVaC9pO7aar6DqCmdt1T
      3G++xP/Y7eWh//cfKR5tZ1SlR52wU1JeSm/zSRq7ewjUORH1mdQ/+DQzXNv51cETDC6cCSgB
      cFfRGK3MWriC+uwgidajHO0ZwRFJonXoUas0GHUi8UgfRz68QGjG/cyZmceod/yzgmDEaBIR
      o376XWHsThth1wgqewF2g8Cpc5c/1QXKysz4SgFgyysgQ3uKjjYvM2dZ8Ln6GI6rqTQ7yVxY
      xpY97zMqVvOTeQ46z8bJmbOWFzbOwO2NYVO7aUKHyaRBliQkSUSr02Jz5kIkyZW9eznlrmTd
      oiq6D09sn0qFRqVGpVUjJ6JI0ngOqBIAd5Go38Wp/dvoN0VpHzZSd08R81TLuLT7CFvfbmPQ
      ncXy1VX09F2gf7iL3liIWDxAOPmJlfSe5Be/P88zf/coZ37/S+xP/k+eqlWxbvVixtzVNxar
      nT3zK7VVzKnhoZXNfPDeK/hb8gn2XCWzfj1zcp2oxDq0uw7huOceSvQ2jEsXcGTLcbZvvcCo
      XM6zDxTcWI8pbwb1c46z77W3OO7pwThnHeWCQCI0TGeLl0DSTCyRIBkc5fyRD2n39VAx/wGy
      bVoABCUd+i4R83D1ag/RiW9TY8qgsCAPgyrGSG8Po/4YRkcehXkZhIe66HGFMejVJAQz2Q4V
      o0Nh8qtLMYXGaOv3k1OYha+/B3V2JTlmgV+89Bf6B0d55tF1zK+t/uK2TFIyHmSgqwdPOI5K
      byW/sACrQQ2xIH29PZBRRmGGDpIhutqv4Y8J2PNLyDMk6OkdxFRQTpZRRdQzSHvvKLLGTGFx
      AerwKL0DY0gaA6JKhSPRxH/7zSnWPv4EFTkmcgpLcJg1iIIgKAGgmJS/+3/+hY6uXn76k+9y
      34r66W7OlESHzvDHbW2sevgRqnMNN14XlABQTNa+Q6fw+AIsmjeb4sLc6W7ObaEEgCKtKTPC
      FGnvpneBYrEYo6Oj33RbFIpv3E27QLIsk0wmb7a8QnHX0Gg0yjWAIn0JgiB8hYEwGVmSkWVA
      FBCEmw+hf/nVy0iyjCCICN9kemBakZEkmeu/gYIgfLy/5fHXJ95BEMbfv/G9T3zfsjx+DAiC
      gCDe5mPgthlv443fekGY2JavNBLs58BLP+PddjuPvPgUq2sKb++wsr+FN945w7xN32F29u1c
      seJj/Wz+X6/TGokTcfVC+Ub+7vsbydVDItjP7rfe5lyvH7VzFs8+t4kyux4pNMirv/kN6iU/
      4Jm5YX71L3/AoxVJZizmH/7uUZya6d6mm5CTdJzczlu7LhCRZUqWPs2z62uBKQRALDjAiT0f
      0elNUn7PGkqFRg419KGvqqUs0/6pFcV9gxw/fJaoPsbQoExxiZ2h7n50hXNZtbCSloM7SM68
      l2pDPwcbQixdMYerB/fgFwz4fUEKalewqExPZlYmhlTcoXeNAp76v34K4UF2v7UTw5pV5OjH
      30m4ejg/aOJ7P36Yfa++T68vSJklSfPRY/SEZcqAwNWzBGc/yU8fNfCH/76TTi84ndO6QTcl
      JxJ0dfZT+/APWKA/x5v7WvGuGg+ASd8G9Vzax7bTPTgNEfbu3E8go4hcq4Xy6rnkZug/tWwi
      OMaFox9wJejE7L/A67tbKSpxcGH3TpoHx2g+up+mHhf+4RYOHWtgLBigYd8+rgZMlOr62Lpz
      L31Dg5w4coJ+/+3dGYrPkBP0XTpDb8ZclhSZJ7owMhpnKUuLwvz+t28QzKmiIsPEcNtFLkWy
      WVRuAyAU8COaLRjNJkxCEH9gOjfk1mRZJhiLY9Tp0VlNCOEgsfj4e5MOAENBNRXaMXYevIg1
      x4nZaMCo1WKxZ2LS3exEksWseWXkOIwYHYXMKCrDpIkQSyZv3qc3WCivqKK6phxdOEgs8eU2
      VjE1cszDpc4gc+aUor3xvcgMXjnN6XAZP/3H71MaucLxph5OHzmAx++mp99F17VrBKLy+LUC
      IAhatKl6thZArVZPXAMIqNUaxIkjf9IBEB4ZRlUyn6efXs7g2aO0DUW/XFsEAbNZTzgcxT8y
      RujjN8YvTAQxRS+k7k4Rnx93UiLHZv3MO+MXuyAgSknisoZZ96yipiQTtWp8zoG9uBjt8CDu
      MQ8+IQtn5nRswV8niCqcGTYCPj/BUR+iPRPjRErQpK8BrKVzyD71BocPRZm19hHml9sJ5RUg
      mj6/ClGjJ7sgD6tWgz4jl8K4DbVWT05ePlajgfzV99K29wMO5WcyIz8DvUZDVkEhNpMGld5G
      QX4Mvc5EfkEeZu1t2w+Km4gno9jt+VhNEz/f/Sf57WkNP3pgOfcN7eSX//NlMquX8WhdAdmm
      UsoBW6ST3swZZM40M/fU/+E3vw5TsPRJZuimdVNuSRA1VNbWcWXbO7waMbF84/NkTEyV/srj
      AHHvAGfPnmXAG7/+57DnzmbR0krMX7HhimkQaOXDRjXrl5ZNd0u+dl9xHGCcqDORV1yBOfLx
      yLHBkkGqdgcVf4U2l3tq9X99ubuEMhKsSFtKNqgi7d20C6ScFBTp4pYBEIvFvum2KBTfOKUL
      pEhrSgAo0to3VhcoGfXTMzCGM7cQs/72FGxVfH3kqJeWxgbaBgJYCytZWFNK0tPFhXPN+AQT
      M2sXMjPfioiEt+cyjR4r99YWT3ezb0HGP9LJhXOX8cpGZsxZSGXheD7TpM8AsiyTTCRIJBIk
      JRkZGUlKkkgkSCSSyLKMlEySTI6/lkwmJ5ZPIskyrr7T7NhxHFcgTjI5vp5EMokkSTfWMZ6b
      fv3/H3/2k68lJeUC/esnMdx2gdOdQYrzzLQf/pCTncO0nz1Bd8yE0X+F/Ycv4ovLJP2DHNm1
      hfdOdk53o29JTsbpPH+czrABc7iVvYcu4Jm4xJ30GcDfc4zfvfQeYVGFuXoD3/vWTM69+xan
      +z24/Tqe+tHzBI/8mb3dVhyJXtyynRybmoHRKCueeozYoX1cbg4T/CCXovbXaRRKKStbQHWB
      h/Nne/AFwsxa/xxrsq7w8/9znNzyQkZ6h6h/8ocsNTTwb384jGjQULDkKb63oRYlQ+LrJJJT
      s4oXakBOjDHWdo1IMEK/20fZwgeYqUvQunOUcDRB34UzREQrBn3qFhmUpST9Lg8ldeuptYm0
      bBkhPBEAkz4DRMf6GAiIZGbnYBCixGIJVBlF1FYVYwi3c6VnPBVC5ZzDE4+vhLEI8zc+zoqC
      BK39cebdv4Siwnk8c/88QE3RPQ/xnSeW49BnUF0zC5vsobO7n0gSBEMW9z78PKuKJDo7exjq
      78QtGXDmOFEnYiiJot8cd+81vIZCaoptSDduj0vE43FCfRdpHLYwp6YETYpnMMo3eg4y8XiM
      61PeJx0AlpKlPLxmFhHPAB1XG2hpbOb8xWYStnxy7KYbGZxWhwOtqEbUG7DoNGg1n0mKkAG0
      mEw6pHiA5rOn6Y6ZqCp03FhEbzRhNlqwWgyAjLPuQTYsyiM02EtbwwX6w192NygmS07G8fVc
      YM/JPmYvXUq+VY/ZYCCZTCInRYxmC672c1xsOMo7O4/R03CADxsGp7vZNyUIAiaTcaJbDgaT
      Fd1E4t6kz1u+7oucanUzs2428UsxVGKcaDBCIOAlEI2hCoW+8PNqjQlV9DLnr/bdeE2SY4RD
      MRIRLwPeAEntx5E5Pg91/JEGwy0naeiBmpoKLo1aSdGkw7tIElf7MV5+9Qily5fRd/k8Yk0N
      xQU5HGs4wkhiGGPxKmrvf5D6DeBp2M5vmjJZX5eaFeMElZqiwjyOXDyCVx5BX7ICy8RBdNNc
      IEmSPjcQloyH6Gm9wrA/gS2vgrJcLb2t7biioFfJaBxFOKQR3Kp8iq0ROq65KZxRQnToGl5D
      PsVWia7WNny6PLKSI0hZ5RRnGhjtbqV7JITObEClyaAkS6BrIExxeQXxgWZGVdmU5mrobGrB
      ExfJLJpJRZ5VmTPwtUriHeqho2uImAygIbdyFnmaIB3t1/BLeoorKsm2ahGAmKePdq+OWSUp
      OB8SAJlY0E1newe+hJbCimpybVqMBsPNy6LcLAAUiruNwWBQkuEU6U0JAEVaUwJAkdZuehdI
      EATU6tQd2FAobhdlRpgibSkzwhRpTwkARVr7Wjv6UizE6QN7kMvqqa/M+4rR5uf8rh20mpay
      YUaAt4+O8MLjq1GrlBieLslgOy/9678zKAto8lfwd99/kIxUvHSUk1w7t4t33j9FQFJTufJp
      Hl89/qTLSTc3EfFy6eQR2kdjOCsWUF9XRLDzPMcausBSxPIV83F8pkTi0OVDvPveTqzVYI5n
      cO2aH2QNlfPn4287TfdYkrzKOubNyqTxwEGCgo5gIEROVT1zKy20HT3MleEQ5oI5rFlciD23
      iFySHN+9mSPnJQpLSllZX66kRkyTUMtJXOUP89NHjbz8r7tp8z7IohSsDicn41xr7aLqoe+z
      QHeWNw824146HgCT/vn0Xj3KoStBcq1edr67latXmnn7zR24DRmMNXzIjhN9n/uMISOfDJOe
      3OJ8IleO8M7BZkzObDwtRzjfHcOqHWTntn30jbk5uWMrZ3qjGH2XeOu9vfS3nOcvO/YTjMY5
      8f67NI2F6ThzkKNX3NgdTrTmTErz7ChTa6ZPwOdDZbVjslqwCAECKVrIWJZk/NEYJoMBfYYF
      MRwgNtX5AGp7AfnGU1y40E0goGao6xrdrgy+98AaKh9cc9PP6O252E0GcorzMHUIOPJKqJ49
      F/VwjO6BRi5ebGcsWEgsLoPBysxZdSywRNn7xgARYx7lNg0nDh8kY0Y9FhKMAaJaTUamE605
      QWmeXXnU/TRSqdQ3iuMiaEjZO+cCqFUqxlORBVQq9dSL47Yd3sqZEStr1s5HIwroTSa0gofh
      QS9Xj+1i1+lubno/dWJG141s7GSMSx9t57w3hzWr52C80UgB8RPFcRPeANr8Sh56dC267hMc
      a/1M7W1p/Akyyj3c6WMrLEAzOoLX4yOY4sVxMzNsBPxBQu4AKlsmhoniuJMOgIKa+ZjGGtl+
      oo8sqx6cs3hyXSn7f/dvvH7oGtm59s99RqPTU15s4+S7e+jTmHBYTajVaopq6jAOnmL38THM
      doFYIo4lIwODToWoMZJht6DPKsQpDXLmeBNCyUpW19rQW2zYTAYcOcWUyi28uquRyG3bTYqp
      0hQuoSp5hF/82xbEeYspT9GKioKopmLWLEZO/IU/vd9GxT3zbl9x3OvC/m4aTl7lk7/T9rL5
      3FORoj8LirR3W4rj3liZqMFo/nQ9aINWuURVpDYlFUKRtpRUCEXaU4rjKtKaUhxXkdaULpAi
      rSkBoEhrqTp4rbgDyFKIK6dOMxiWseRVMa86L0UPKJngWC/Nl9sIyAaKK2sozbEAyhlA8RUk
      hy7wwbFryPEB9m7/kO4vro02faQEneePcrEvSKjvLB981IBv4qGmkw7Y0FAz7761nR5vEFX+
      cl58eind+99kV8MQsiaLTd95mqLgJd7ddYKxqEDxwvt5ZFUtJo0SY3crd0cL8oylrL5fR//p
      zQz7oNz41z/3TZOSCfqGxyifu5Zaq5GebUMEJ57zPumjMxEJYSyYxfyqHIbaztHacIHdp9w8
      8OOf8OzaKsKjw5w9fICumIU8W4KTB44w6Fcyde5myWQSRBFRFEAKE0nhr1uSJARBQBAhHove
      KME56TOAu7uF1t4oi2Y70At+YuEwCcmIPcNKhX0ZRYFR3j8QwV4ykyV1udwjmMhRHvN+VzOa
      TOAef66DoLJhsUx3i25OQMBg0CNJErIkYjCY0U4cmpMvjjs2QjhmJhGJEJUT6LKKmJF7nqO7
      DnC66xyJyvXMqSyh6eoA7ao2WgIlfK+oAKWQ/93LNLOOjKMn2b/PwLCljPszprtFNyeo1RQV
      5HHi8mmiwgCaonosE5mrk64NGh7r4kJjB3GDBb0kkVc5F1u4kwstA0iGTObOq8Ecd9HcfJWx
      qI7S6lmUZFkQlSq2dy1ZjtN18SQdrjiOsrnUlWWmaNFimah/hCuXmnHH9ZTXzKPIoVOK4yrS
      m1IcV5H2lABQpDUlABRpTSmOq0hryowwRdpSZoQp0p4SAIq09uU7+oFOtry9h6L1P2JRwfUX
      h9j5y5fpqnqav11fManVSKEhDm87ReGzm6gQUnMYRXFzUqSHV//X77kWFTCXr+aHz63GkoqF
      QOQkvU0H2LLjKB5ZT+3qp9i4rByYQgAko35aL56jxx0jo2g2teVWKmbPIUPn5+r5RgYCEmpj
      jIHBUXrUTRze14k6eyYL5xQS6bvKmSu9SFoHc+bNQj3WyuUuL8hJYv5utu1rYEV5GZnz52BX
      UifuGKErR+nJfYD//KiRl3+2hxbPau5JwTJQcjJO++WrlNz/Io9rz/Dm4QZcC8YDYNJdIM/V
      o+w53Ys63sXmt7fS3tvPgW1buNQ3xukPt7D16DX0Rh0iEHaNEk8MsfudNznfco3d2z/CIyRp
      PfYuu8720du4jz9vPkJco8Ok06EWNZgsJlTKCeCO4vd4UNkdWOw2bEKQQOCvf2Y6jBfHjWIx
      GjFk2lCHgzeK4046ADSZRRRnRLjU2IHPO0rgM6mv+bPrWVBdilkvkj17KavXLSU3MsLFzgBV
      tYW4Wy7T2d3HiHd8JoKlYCYL5tczpzQPs95G6axSLJrbts2Kb4AojhecHb+NKN4oOJtyBBAF
      ESZaKogi13vbky+O+9FmjvcZWbtuEfqbZLgJwsRKZZnw2Ag+X4AQAoK3i22bP8K5+D7mz3Te
      +IOCIHwicUpGlmSUG7J3Flt+PmqXC7/PT1jMJjMFuz8wfsBnZtgIBUKEvWE0tkyMUy2Om11R
      hWrwAtuOtKNXy4SCQTQ6HWpRRKPVo1ULgIBapyM4eJ4//fIt/CXLeWhFNeWFRk59sIsOt0DQ
      60JUa9Fp1QgCGDKc5DsD7HplF30pPKFC8XnaonpK/Pv4+c/eJFw5n3LDdLfo5gRRQ9nMGXQf
      eoV/f7eR/LlzsE1c/SoDYYq0pQyEKdKeEgCKtKYEgCKtKQGgSGs3HQlWpkQq0oVyBlCkNSUA
      FGltGqZ9SQTGeukeVTGzIh+NkgB0x5KlCJ1NTYxGwewsoaosK0UfXC4T9g7T2dFNUNaRVzKD
      /MzxGo7TcgZIJmJEonHlSTR3uOTIRbbvPsdQXxPbtnxIb3i6W3QLUoLOcwc52niN7sYDvH+g
      Af9Ui+OGXe28/85W2l0hTGWreG65iT//ZT/6HDOjHR4KZxfi7rxGonAlP/n2PXQf/5BdJ1uR
      TPmsfGgDjrZ3ePm4i0xrBuU1uXR1GSnJVXNu73bOd3kx5S/gkcdWITV/wNsHrhCKiCx97kfU
      hk/zp92XyLVLdA6pWff8d1lW9ulnEkuJIOf3bObAxT4EUyEPPPkYOa5jvPLeeUJRqP3WC9xr
      6uKVHcdw2NV0DUjUb3oc1fl38FR9i3XVena8to3yTU/h7D/OrqNXiIoGalY9xn3lHl767Q5U
      2fl4+/uYteE/sHFRAUreHng6mklW3suGjTrc/30rgz4oScF0CCmZpG/IxYwFj1NraeSdHQME
      p5oNGvMOIzurWVKbS1fjUToHo3h9XkrqH2B+bpy20Wwe37SUwPnTXB5o44N9ZzAWlWP0NvL+
      wcuEAz58miKe+M4LVJuDeH0hRq8c5Eivlad++APm2KO43cMMDUaprF9MgdbFsTPtJKIhvKMh
      Fjz6DPMdYxxvGPhc26JjjXx4bIgVT/+Y9TV2PCO99PR4KatfSqklyLFTLSTjEbxDXqoefIpl
      xRFONvRRWOqg7XIno13n6Itlkm9wsX3HOWau/xte3FTNmV3budrvwe2NUlK/kU21Rs4fa8B9
      276aO1siHkdQqVGpVYhSiHCqngGQSSSTiKKIqBZJxCIkEuPvTDoA/CP99A0OERa1aCdySVUq
      C1m5VrQqFRpbBg6dBpVKJBLxE4ioyMrJp379MzyxshK1CCazCa1Od6NcYtLnR7DYMBizWPXw
      w9RmiwyODDM04ker097IFhXMOeQ6DViMBsSbdJukoIeY1oTVbKd2zbe4tzIDj2uEwQEPKq3u
      4zRdUxb5mQbMZjNqRHKKZ6Ee7eDMuUtYyqvIEr0EVGZysrKx5hdhiPkJBsNodTocjmwyMywg
      XU//VegNBmRJQgZElRWTabpbdHMCAnqdDlmWkVGh1xvRTJzCJ90FcvVdwxfLxqSRicpJ4vHE
      LZc12/MocaoY80dJXD1BYtbDzLvJcsbSmVgvNdN0/jTvHdtHyaKFdPQPYF1QhyjLJKMxEgCC
      MJE+ffMLZk3WDAo0DVy6cIKWjqMEs2bi7e5CmF2HxiMhRWLE0Y7vik+swl5QyqyMPexqjPLk
      P8zGmBWkyr6X8yf2E9J0QNFsCnOvd7fG26D4mGXmHOwnznHimIlhYzGrUzQdGpWagvwczrU2
      Iqi6UefPxTLRVVP90z/90z99dnlZlsdrv3+C1ZmFEAkQNuRRU1ZEfmE+jkwnJaVFWLU6MgtK
      KMmxojU5qJhTzYx8J2HXKLrCOu6dPxOzXoPJWUxZgROdWoXJlkNldQ3FDpmB/hHy5ixn4T1z
      KbYZCfjDZJeWU5ybR35RFhark9KSXLSClozcIgqdn/6pEdU2igtMjA0Oos2vZemKxVTlZBD0
      ecnIL6UsP4/8khws5gxKSgrQq7TYswspzrPi6bzEteQMNj0wD7PKSHF5DrGxYQKqXFasXUWp
      Q4eotVFcVoxNL6DPyKe0MFMpeg0IWgdmYYjuEYnKJUuZlWVKyeK4giBgsliJjvXhFrJYWD+f
      HLOGf/7nf/4vd1xx3IC7kc0v7WLoE6/l3PMoL66tnNqKknFaDr7OXw71seCRv2HT/DxlUCTN
      GJTq0Ip0plSHVqQ9JQAUae2WxXFVqtQc1FYobidlTrAibSlzghVpTwkARVr7etKh5ThDl49w
      RZjPqtn2Wy6WCLjY89af8dU8xtP1pSgDrXcWKT7I5l//nit+cM5ex/ceX4whFb9DWWKw9Sjb
      th1kVDKz8P4nuG9BETCV4rjxIN0tlxnwJbDlVlCZI9B8tR9BKxH0y2RmGfGMuNE4y6mwDPDu
      G+8yUhojWzODiM+DjICjsBRDcICOQR8qSw7V+XpcAz2MFYUZajvPENlUl+WjU6fiXlR8Vvjy
      Ia5aV/MP3zXy8s/3cWnNYu5xTHerPk9Oxmi90ETOyufZoDnFm8fOUjd7igHgbTvO+x91U5oT
      5r0Djby4cTZvvPIOBYtXELt4Ao+jmlmZQc61NvH9nyxAkiSSiQj9V47z3tbTLHj2SRbQyK5j
      LRQWmji76wChZ54GIDZwjj8dvETBfS9SVfb17ATF7edzj6FyzMXm0JEhhggGgFQMAEnGG4lg
      NZkw2hxow8PEp5oOrbUXUJol0t3Rj2dsAG8YVGo781YtpzrXQNxWxfrFNWj8LiR7Prk5VnIr
      5lPq1IK5iHvvXcLMGRXMqchgsOsaw339DIcSQJCGA3sY0c5m2aIK5df/DiJMFJy9fhsxlW8n
      jicyjrdQBphycdyD73CoS8OqdYswTuQzC4IKtUaFgICgUqH+TMamLMsgy6BSoRIlBpuOsnVf
      K3NWr6Ei53pCm4rc+asojDVx5mIv8VTei4pPseflofZ4CAaCRMVsnCmaDSqoRBw2O+FQmKg/
      is7mwDDV4rj2giKk/gvsONSCnIzi9/tvvbDGQFamnfbDb3C0/XrFWwFrVg4Zgos9ew8xEvDj
      Ho0CeopmLeH+laU0HjuOy6/kIN0ptMULyRvexc9/9hfcJXMoNU53i25OEDWUlpfQsf8Vfv/O
      OTJnzZ56cVxZlpCSEvJEWXNBEJBlGUEUQRp/XRRAkmREURxfXpJvnCZFcfxfSZKQr58nBBFB
      lpAFEREZSR5fTsm7vzPIsowsSUiyjCCqEMVbzdiYbjKyPHHsyQKiavwYEwXh5tmgCkU6UEaC
      FWlPCQBFWlMCQJHWlOK4irSmnAEUaU0JAEVam3QuUNTdR49fRUFeLoZJ1QWUiZPQP1QAABEE
      SURBVPhdhAUbGWalkODdSJZjDLR34InJGDLyKMmzp+gvqkw06Ka/b4iIrCEzt5Asmx6YwhnA
      ffF9fvvmhwxO+mngbo5ve5vj7Sn6+HDFVyaNNvHO5r00NhzkjTc+SN3H3EpJOs/uY/fB05w9
      uJ1t+y/in6jrNqX5ANHRdrb9+VdIWhv3bXqMGfouNv9lJ/2hJOXLn+HB4jHe2HKAqN6MKeGn
      ubkNedBKRdbDVOVbvo5NU0wjT8cl4pWreWKjnlf/v+0M+KBIP92t+jwpmaB3wMXMJY8y13SR
      zbv6CETH35vSGSuuyWTNE9+lXtvBh0fO0dFyBU35MhYVazi/7yi90QCDfd2Urf0eL/79k9Rk
      57L8vg3KwX+XikejCBotaq0atRwkFJruFt2KTDyRQK1SodKpSUTDN4rjTukMYLbZsZqsaDP1
      eAdHGTNFcQ93oxMlbuSXChYcmXpUopiieSGK20Wv1yN7rhfHNWNM0WQ4ENDptBPFcUV0OgPq
      iSN/SmcA30g/7e3NtPREKCm2MdzRRkCTidOqQ5DjfLqcqAq1WsbjdhGK3rqQruLOZa6oxtJ7
      maaLrYzqCshL2XRoFXk5WYx2t9NxuRd1Tj7mqaZDGwtreejeGiJ9V5BmrGHD8pWs3bSeMp2b
      gHkGS+tLMBoKWbJiOfkGgCwW37cMfaAbV0AZVLsbqTLmsqxGoKnJRe36FRSmaCkpQVRTWrOQ
      rGQvHf4Mli6vxTJx5Cu1QRVpS6kNqkh7SgAo0poSAIq0dsvboKKoxIbi7qdMiVSkLWVKpCLt
      KQGgSGuTToUYu7CDN5q1PLbpAfKmkNrj7jzH1oPX2Pj8I2RrPj1S0nbgDc4mZrNx3VzMk1+l
      IkVISRfvv/R7Gscgb96DPL+hLkWfnikx2nmGHVv3MSTbWbL+cVbMyQGmMh/A1c2l5gSzZxTj
      thkoKCrCrArTe60LX0zEWVhGrj5GZ/cQaCAUjJNRUIbTWcK9yzOxiBK+4X76hj2IJgeFBXlk
      V9dTL9vRJUNca+3AFwdzVjFluVYlj+gOEL18gAbVEv7+h0Ze/rc9NC6tY2HGdLfq8+REnCun
      z2Jb8jRr1ad466PjVFc8CkwxGS7gGqKj7TIXWhvIXfsCC8XzbD/jo8jgp0ucxQtrM3n1d69g
      nr8K3bWzeAsf4vn5Ef7wZhMv/mQDZ97ait+WT6S/l5kbXyCr6Q32xZfx9EIvm/ePka8ZpCVY
      xX/66eM4v449obitvK5R1FlzyMjSkSmGCASAVAwAScITiWC3WDDbnOjCw8Ti4+9NKQBM2SUs
      v/9hQnITbzcdxd/XyBWvhoAliZcIvfPuRxD0zFmxkRKni5fP9hGeP54h5XU10zZm5blnHycL
      DwmDg65LADK6zFJmZHrp7nAxMtSDB5QAuAPIjBecHb+NmESSprc9f91EcVxZ4vq9zykFQDIe
      J55IEI9LqNU61DoNlSue4kerHLQPJJnpcLMLDQaDHq1WgyB+XDFYFDSQjBNPJggHRvHE9Egy
      QIBz7x3gZPgenllWR/8uz+3bXsXXyp6bg6rbRygkE1PlpG5xXHG8OK4nHCWmjqGzZWKcyAad
      UgAkvD3s2fxHAiNqljy2ktlJA3/evJXfXBaw1T3CzC+oDW/PmcP8shZ2vPY75ITI/I3PTZSS
      1+DMyyF8sIFjSYjGwOsBbv1gGUWK0JUsJHf7n/jfv5ZIFKygxPTXPzMdBJWakrIizu99k0vx
      GEWLv411Ypr6pAfCktEQgWgCARlZUGM0GlELCYKBIAlJQGcyYxAlAqEIWpMFMR4iHBcw6ETC
      kQRGswEpGiEUiSGotBiMBogFiaJBr5IIhqLjhXYR0JssaFM0tVbxMVmWiAb9RBIyar0Jk16T
      ojcvZKREnFAoTEIW0BvN6DSiUhxXkd6UkWBF2lMCQJHWlABQpLVbFseNx+PfdFsUim/cLW+D
      KtfGinSgdIEUaW1KA2FfTCLkG8MX15Nj1+EPRcfHClS3jrFE3I/LFcOWmYFeo8TinUaW44wN
      DBJMyGjNDrId5hT9RZWJRwK4Rt3EUGPNcGIzjeet3sb2hmk+9Da/23KOwHALb2/dw9hfeeRp
      LDTEpcZW/JHkFy6nSE2S+zKv//Et9u15l5df+YDB6HS36BakJJ1nP2Tztl3s3voam/c3EZxq
      acRE2MPJ3Zs52eqhaOEGNqyuYPDYe2w73o5gr+KZ51cC45l3J957lVPnQngiGmod/XS44qgN
      M1m9Io8ze/bTGzAw776HWJDnZ3jQRTTh5f0/voVbZcLr8lG6ZBP3LS5Dn5rDiooJvvYmYlXr
      eH6jntf+x/v0+yFfN92t+jwpmaC3b4SqFY8w19jA5g978McWAFM4A/Sf2syHXVae+g+PkOw4
      w9XGJk5ejXPvunpUvfvZ3xQGQBAFalesI6+klqc3LCTQ1cyQaQEvPFmPt6UNfeUS6nJ97N93
      Fq93lGsdvQRjUXqvXCWWs4BN95g5dGAfPWNfz85Q3D7RcBhBp0er16KWA+Pp0ClJJhpPoFGr
      URu0JCNBrt/knHQA+Ea9mO1ZmB0zePYHL1CTb0av9tF6pYdg9IvyYPVkOi2IogqNVmL0Wjt9
      3psUktebyHVmYs/JwiTLKPegUp9OpxtPLQZE0YTBMN0tuhUBrfaTxXH1Uy+O6yjIJTLWQ39X
      M6/979+x58gZGi4Pk189A6tBJPmJZHBBEBGlGP5AmOuvSmE/Vy9eIGApozzLSFKWPn2rVRBA
      EMb/uR3brPjamUsrMPW109neg1uTS84XZANPJ0GlIsfpwD3Uz2DnEGJmztTToXPmf4uNgV2c
      2HOUrDnLWVmXiVncT3tTJ7lVizBoY2QWVjHXnIs9x8zy6i7ONvVSPns+9nw7aksmi1atJXyu
      mT5LOXMrbGhNDubUabDqDVTOnYfDYUCjL2RurRlrCvYlFZ+mzlrI4tK32bdvkIr7HqA4RZ+E
      JYhqymsX0Lv/ICdjZhatnodNKY6rSHdKcVxF2lMCQJHWlABQpDWlOK4irSlTIhVpS5kSqUh7
      SgAo0tptDIAoHWd289aeSyQjbs5daMIf+uKxBL/rIlve+pA+z5cbc3D1nuSdLQdxBb/4Mazx
      0ChN5y7ijsJY7xWarvYTGm3grbd20uP9Un9aAUhJN3te+TW/+MWveXPfJVJ3DqHEWM8F3nzp
      V/zqd3/meMsI1/OPJz0SLCfjeEaH8Ibi6K1ZZDmMRD0jDHtCoDGRm2fA1ddCQ6+aBeYm3tzV
      y9PftlOSIROOywgqI44MHd7RMSJJEWumE7OxgLr5duwGmZG+buKCikQsgcGehcNmRPWpnAiZ
      WMDDkMtLUtDhyHYS8vZw8fwwZZUF+O1mnFlONJExRiJqsjMteAYHUZvNDB99mz9fUPOs3c6l
      t19irPgRbAt9NDRcZdaqB3EkhxnxhlHpbeTlZqAWlGSMyYi1HuZUoILvbjLylz/u4fLCGupS
      sKCZnIhz9fQpmLGSteJ5dh44SXnJJmAKAeDrOs0rb3+E1m5g1JvJE08tpfmDDxjSivS1jXL/
      D/+W64XBBq+14hn1cLGhmUvX3uVMrJI18+vI0o9xod2F5BsgVriGp5eEeO2PbTz1k0fY97P/
      ird0MTnhNvodK/jR8xvI/eSTxxN+Lux+lXcao+Tqo2TWP8HqbIgMX+PU8Y8Y7uhkzmM/ZN7o
      u/yyKYv//MP72fbzf8X5wBMYOwdwD8u0Xj5Lx6CHULyDwcrx1sq+TrZ/sB23yYC3L8Sa7/0t
      S4pSNqsrpXgG+1HlraaoXEc2B/H6ScmKfrIkMRoIklWZS46tAN3pYa4nOkw+HfriCdzWeTz+
      4vd57tHlZFttFFWWYklG8I+20Tk00Q0RBCrqFpGZW859985Gj4a8mhVsenAZ5UXFFGcbCY0N
      09k7TDzxiRtQaiMV81fz8ANzCfZfwxP6TAOEBAGvD79rmJBgIdNmQBBA7Sjj/g2PsrxEzbX+
      URKfvadlyGfx3BIcxbUsX/sYdUVWZi5aRKVz/CEHo1dOcaSxhe6uHvqvNXC4oW+Kuzd9SRP7
      WgZk4iRSeF7Txzc7JZLJxI1CvpM+AwgCSFISGRWCFMd15Sibd5xh1XceYfZgz+cjSZYn/qgK
      vV6NHHZxdOcWrjjuY+3qGt67+Jnl1RpMBgM6gxGN7L7JFhioWno/D9naaD57ii27TlLzsIDG
      YECv0aDXaZAkGUGnQ0wmScZCRD51aTHRHnmibddflSSMGbN54f/+HpbBXtS5ZZPdJWnPnp2N
      2BcgEoHkHVAc1xeNEg8nMdgyb6RuT/oMkD93OVnBi7z9x5f5y44juDBh18VpPn+eQW8Ej/fj
      qs46vQ1LrIcPD13ixiw5lRarzUyo/zIXGofwRf3EpCn8ZMhxhtsv0tDmQpuRR111ETcbqzMV
      z8LhbeH9XQdxT6xeZXcg9V/k2MUuLDYj7adO0jLiByCzqp4a5yjbf/97/v3NfbgiKV/jO2Xo
      yuaTM7CPP7y8HVdOJcUp+pgfQaWmqKSQrmPb2LzzIpYZM7FOPMpm0gNhspTA7x7FF0qgNdtx
      WDT4xsYIJUAtyKhMdsyE8SX0ZFlUuMdcRDFgUMWQdHYcZi0Rvwe3L4Sg1iCLGhxWDT5vDJvD
      SmDMhdaaiVEM4/JE0Gh1yPLHASKoNBg04PV4ictqrA4HBiGC258kI8NKzD9GWGXGbhDwulyE
      0aCRk+isDsyaOKMj40+mMQtBxvxJLHY9kWACW6aDpH8UdzCGSm8lJ9OCqFwET4osS/hdg3jD
      EnqrE6dNn6JzOWSSsTDuMTcRSYXNkYVZr0rh4rjRUY7t2UtD99iNroopu4y16x6iyDatLVPc
      RYSUDQCF4hugpEIo0p4SAIq0dsviuInEF6cXKBR3g1uOA0ip/8g/heIrU7pAirR2G4vjfp4s
      yyRiUWSVBo1alaL3iBVfliwnCXq9xCRQ6UxYTboU/Y5lkvEogUCIJCJ6oxmDbvzQ/1oDQIoF
      OLpzB5rZq1lalZ+iO0fxZUneK/zxV9sQbCo8VPKD//gYOdrpbtVNSEk6z+xi5/EukMNYZ23g
      qQfqgKkUx414Of/RTs51eCmou4+1y8rxXTrE+0eugL2STY+sxBEd4OC+j2gdE5izbC0F3mO8
      t+8whmYJ549W0vvRPq6OJChdsJY19RVK8ds7nL/9IpGqDfxkk57XfvYBPT7IcU53qz5PTibo
      6R2meu1TzDU2sGXfNXzR8QCY9DXA0Lnt7GqWWb1xKSMXjtB08jCvbz5G0cr1lAmdHDp1ldN7
      t3LSX8SDy4q4cuoMQsFCKvMzWbRuGbrOBgbEIhZWqDi8dw/XXF/b9iq+IZFgCNFgRG/QoyNA
      IDjdLbo5GZlILI5Oq0Vr0iOFPy6OO+kzgHtgBINjAdnFdfzN39fhvfQBu6IZlM+qYMbsCgiO
      8N6fA2TNLqKsZgY/rIGobwS1SkRn0KFK6JB8fbSOuZCShhuptIo7l1aruZFZKwgG9ClbzlJA
      o9HcKI6r1epQTTyIfdIBYMvKINgzhMfVw4Hte8mpyEOvHqPn2gj+lr20qCrJy9Az0jXESFeQ
      3YfaWLKmHkGWScQTtJw6SL9uJQ9XizT0eydSpZU+0J3MXFyCrrGXkSE7XtGJM2WL44o4HXZ6
      PG58ETeC3XmjOO6ku0B59U/w0Iww21/ZTLx4PrXL1vPik4tp3vYqRwYMLKuvZdmDT7BAc5lX
      t53EOWseBU4HdfMqaTt4Avuy+3D6r3C4S0NtWQ6q5GdnvCjuNJrcxdyT1c5rrx8hd/UqylPx
      AhgQRA0z584n2bqHHWd8LFixEPvEGUApjqtIW0pxXEXa+/8BbuwofS/i1N0AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Boards by Route' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Overview Table' width='192'>
      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
      pgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crowded Trips' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Route Drilldown' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Drilldown' width='192'>
      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
      v9n2/2icsz8gpKrIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Arrival Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Departure Time' width='192'>
      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
      dZ7/D+6xNAFIzWEVAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
